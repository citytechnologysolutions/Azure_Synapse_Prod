{
	"name": "7- Perations_LMS_Extractor_Billing_PROD",
	"properties": {
		"folder": {
			"name": "ARCHIVE/PROD/Operations Notebooks PROD"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "febc9b3d-d46c-4a50-9114-9715e066004f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Load Source Data from the Datalake"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#dboBill_ConsignmentR = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_ConsignmentR.parquet', format='parquet')\r\n",
					"#dboBill_ConsignmentR.createOrReplaceTempView(\"dboBill_ConsignmentR\")\r\n",
					"\r\n",
					"#dboconsignment = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboconsignment.parquet', format='parquet')\r\n",
					"#dboconsignment.createOrReplaceTempView(\"dboconsignment\")\r\n",
					"\r\n",
					"#dboCustomer = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboCustomer.parquet', format='parquet')\r\n",
					"#dboCustomer.createOrReplaceTempView(\"dboCustomer\")\r\n",
					"\r\n",
					"#dboSRoute = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboSRoute.parquet', format='parquet')\r\n",
					"#dboSRoute.createOrReplaceTempView(\"dboSRoute\")\r\n",
					"\r\n",
					"#dboBill_BillCustomersR = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_BillCustomersR.parquet', format='parquet')\r\n",
					"#dboBill_BillCustomersR.createOrReplaceTempView(\"dboBill_BillCustomersR\")\r\n",
					"\r\n",
					"#dboBill_ZoneRoute = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_ZoneRoute.parquet', format='parquet')\r\n",
					"#dboBill_ZoneRoute.createOrReplaceTempView(\"dboBill_ZoneRoute\")\r\n",
					"\r\n",
					"#dboBill_ProductCategory = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_ProductCategory.parquet', format='parquet')\r\n",
					"#dboBill_ProductCategory.createOrReplaceTempView(\"dboBill_ProductCategory\")\r\n",
					"\r\n",
					"#dboBill_CustomerGroups = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_CustomerGroups.parquet', format='parquet')\r\n",
					"#dboBill_CustomerGroups.createOrReplaceTempView(\"dboBill_CustomerGroups\")\r\n",
					"\r\n",
					"#dboBill_CustomerGroupTypes = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_CustomerGroupTypes.parquet', format='parquet')\r\n",
					"#dboBill_CustomerGroupTypes.createOrReplaceTempView(\"dboBill_CustomerGroupTypes\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Start Converting the Qview Scripting MSSQL for table BILLING"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"BILLING = spark.sql(\"\"\"\r\n",
					"SELECT `ConsignID`    \t\t\t\t\tAS `CN_ID`,\r\n",
					"`BillCustomerName` \t\t\t\tAS `BL_BillCustomerName`,\r\n",
					"`BillCustomerPickUpRoute`   \tAS `BL_BillCustomerPickUpRoute`,\r\n",
					"`DeliverCustomerName` \t\t\tAS `BL_DeliverCustomerName`,\r\n",
					"`DeliverRoute`   \t\t\t\tAS `BL_DeliverRoute`,\r\n",
					"`DeliverRouteLocalFlag` \t\tAS `BL_DeliverRouteLocalFlag`,\r\n",
					"\r\n",
					"`SAPCode` \t\t\t\t\t\tAS `BL_SAPCode`,\r\n",
					"`ProductCategory` \t\t\t\tAS `BL_ProductCategory`,\r\n",
					"`CustomerGroup` \t\t\t\tAS `BL_CustomerGroup`,\r\n",
					"\r\n",
					"`AWeight`    \t\t\t\t\tAS `BL_AWeight`,\r\n",
					"`VWeight`    \t\t\t\t\tAS `BL_VWeight`,\r\n",
					"`CWeight`    \t\t\t\t\tAS `BL_CWeight`,\r\n",
					"`#Pcls`     \t\t\t\t\tAS `BL_#Pcls`,\r\n",
					"`Min_Rate`    \t\t\t\t\tAS `BL_MinRate`,\r\n",
					"`Min_Weight`   \t\t\t\t\tAS `BL_MinWeight`,\r\n",
					"`Add_KG_Rate`   \t\t\t\tAS `BL_AddKGRate`,\r\n",
					"`KG_Rate_Charge`  \t\t\t\tAS `BL_KGRateCharge`,\r\n",
					"`Charge`    \t\t\t\t\tAS `BL_Charge`,\r\n",
					"`FuelLevy`    \t\t\t\t\tAS `BL_FuelLevy`,\r\n",
					"`DocFees`    \t\t\t\t\tAS `BL_DocFees`,\r\n",
					"`OtherFees`    \t\t\t\t\tAS `BL_OtherFees`\r\n",
					"FROM(\r\n",
					"SELECT DISTINCT bc.ConsignID       \r\n",
					"  , bcust.`name`       \t\t\t\t\t\tas `BillCustomerName`\r\n",
					"  , zr.Description     \t\t\t\t\t\tas `BillCustomerPickUpRoute`\r\n",
					"  , dcust.Name         \t\t\t\t\t\tas `DeliverCustomerName`\r\n",
					"  , dzr.Description    \t\t\t\t\t\tas `DeliverRoute`\r\n",
					"  , dsr.LocalFlag      \t\t\t\t\t\tas `DeliverRouteLocalFlag`\r\n",
					"  , bcr.SAPCode\r\n",
					"  , bpc.Description\t\t\t\t\t\t\tas `ProductCategory`\r\n",
					"  , bgt.Description \t\t\t\t\t\tas `CustomerGroup`\r\n",
					"  , bc.AWeight\r\n",
					"  , bc.VWeight\r\n",
					"  , bc.ChargeWeight     \t\t\t\t\tas `CWeight`\r\n",
					"  , bc.NoOfParcels      \t\t\t\t\tas `#Pcls`\r\n",
					"  , bc.MinRate          \t\t\t\t\tas `Min_Rate`\r\n",
					"  , bc.MinWeight        \t\t\t\t\tas `Min_Weight`\r\n",
					"  , bc.TotRate          \t\t\t\t\tas `Add_KG_Rate`\r\n",
					"  , bc.ChargeWeight*bc.TotRate     \t\t\tas `KG_Rate_Charge`\r\n",
					"  , bc.RouteCharge      \t\t\t\t\tas `Charge`\r\n",
					"  , bc.TotFuelSurcharge  \t\t\t\t\tas `FuelLevy`\r\n",
					"  , bc.TotDocSurcharge     \t\t\t\t\tas `DocFees`\r\n",
					"  , bc.TotOtherSurcharge  \t\t\t\t\tas `OtherFees`\r\n",
					" -- OLD FIELDS\r\n",
					" -- , ISNULL((SELECT Round(SUM(ISNULL(RouteSurcharge,0)),2)\r\n",
					" --          FROM `logidatacc`.`dbo`.`Bill_ConsignSurChargeR` WITH (NOLOCK)\r\n",
					" --          WHERE ConsignID = bc.ConsignID\r\n",
					" --          AND SurchargeTypeID = 9),0)     \t\t  as `FuelLevy`\r\n",
					" -- , ISNULL((SELECT Round(SUM(ISNULL(RouteSurcharge,0)),2)\r\n",
					" --          FROM `logidatacc`.`dbo`.`Bill_ConsignSurChargeR` WITH (NOLOCK)\r\n",
					" --          WHERE ConsignID = bc.ConsignID\r\n",
					" --          AND SurchargeTypeID = 1),0)     \t\t  as `DocFees`\r\n",
					" -- , ISNULL((SELECT Round(SUM(ISNULL(RouteSurcharge,0)),2)\r\n",
					" --          FROM `logidatacc`.`dbo`.`Bill_ConsignSurChargeR` WITH (NOLOCK)\r\n",
					" --          WHERE ConsignID = bc.ConsignID\r\n",
					" --          AND SurchargeTypeID NOT IN (1,9,18)),0)  as `OtherFees`\r\n",
					"FROM dboBill_ConsignmentR bc\r\n",
					"LEFT JOIN dboconsignment cs on cs.id = bc.ConsignID\r\n",
					"LEFT JOIN dboCustomer bcust on bcust.ID = bc.BillCust\r\n",
					"LEFT JOIN dboCustomer dcust on dcust.ID = cs.DeliverCustID\r\n",
					"LEFT JOIN dboSRoute dsr on dsr.ID = dcust.SRouteID\r\n",
					"LEFT JOIN dboBill_BillCustomersR bcr on bcr.BillCustID = bcust.CustMainID\r\n",
					"LEFT JOIN dboBill_ZoneRoute zr on zr.ID = bc.PickUpRouteID\r\n",
					"LEFT JOIN dboBill_ZoneRoute dzr on dzr.ID = bc.DeliverRouteID\r\n",
					"LEFT JOIN dboBill_ProductCategory bpc on bpc.ID = bcr.ProductCategoryID\r\n",
					"LEFT JOIN dboBill_CustomerGroups bcg on bcg.ID = bcr.CustGroupID\r\n",
					"LEFT JOIN dboBill_CustomerGroupTypes bgt on bgt.ID = bcg.GroupTypeID\r\n",
					")a\r\n",
					"\"\"\")\r\n",
					"#BILLING.show()\r\n",
					"BILLING.createOrReplaceTempView(\"BILLING\")"
				],
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Print success message on the Production Script"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Successful run of the script\")"
				],
				"execution_count": null
			}
		]
	}
}