{
	"name": "15- Finance_Data_Preparation_Key_PROD",
	"properties": {
		"folder": {
			"name": "ARCHIVE/PROD/Transactions Notebooks PROD"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a2a6e11c-29bb-4ffb-8205-e9222f186c50"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Load Source Data from BlobStorage"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#TRANSACTIONS = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_TRANSACTIONS_CONTINUED.parquet', format='parquet')\r\n",
					"#TRANSACTIONS.createOrReplaceTempView(\"TRANSACTIONS\")\r\n",
					"\r\n",
					"#DEPRECIATION = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_DEPRECIATION.parquet', format='parquet')\r\n",
					"#DEPRECIATION.createOrReplaceTempView(\"DEPRECIATION\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Start of QView scripting translated over to MSSQL for table F_KEY"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"TRANSACTIONS = spark.sql(\"\"\"\r\n",
					"SELECT distinct\r\n",
					"Project as `Fleet_Code`,\r\n",
					"Depot as `Depot_Code`,\r\n",
					"Company,\r\n",
					"`Posting_Date`,\r\n",
					"Lane,\r\n",
					"`Service_Type` as `Service_Type_KEY`,\r\n",
					"if(isnull(`Customer_Code`), 'ZZNONE', `Customer_Code`) as `Customer_Code`,\r\n",
					"if(isnull(`Supplier_Code`), 'ZZNONE', `Supplier_Code`) as `Supplier_Code`,\r\n",
					"MAINKEY2  as `MAINKEY2`,\r\n",
					"MAINKEY2 || `Service_Type` as `MAINKEY_ST`\r\n",
					"FROM `TRANSACTIONS`\r\n",
					"\"\"\")\r\n",
					"#TRANSACTIONS.show()\r\n",
					"TRANSACTIONS.createOrReplaceTempView(\"TRANSACTIONS\")"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"DEPRECIATION = spark.sql(\"\"\"\r\n",
					"SELECT distinct\r\n",
					"`Fleet_Code`,\r\n",
					"Company,\r\n",
					"date(`Posting_Date`) as `Posting_Date`,\r\n",
					"`Depreciation_KEY`\r\n",
					"FROM DEPRECIATION\r\n",
					"\"\"\")\r\n",
					"#DEPRECIATION.show()\r\n",
					"DEPRECIATION.createOrReplaceTempView(\"DEPRECIATION\")"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"KEY = spark.sql(\"\"\"\r\n",
					"SELECT *\r\n",
					"FROM `TRANSACTIONS` t\r\n",
					"FULL OUTER JOIN DEPRECIATION d \r\n",
					"USING(Fleet_Code, Company, Posting_Date)\r\n",
					"\"\"\")\r\n",
					"#KEY.show()\r\n",
					"KEY.createOrReplaceTempView(\"KEY\")"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"KEY = spark.sql(\"\"\"\r\n",
					"SELECT DISTINCT *,\r\n",
					"       `Customer_Code` || Company as `Customer_Code_KEY`,\r\n",
					"       `Supplier_Code` || Company as `Supplier_Code_KEY`,\r\n",
					"       --if(Upper(WhsName)='OFFSITE 4','DURBAN EXPRESS',if(Upper(WhsName)='OFFSITE 5','GWM',Upper(WhsName))) as Depot, --## Need warehouse\r\n",
					"       `Fleet_Code` || Company as `Fleet_KEY`\r\n",
					"FROM KEY\r\n",
					"\"\"\")\r\n",
					"#KEY.show()\r\n",
					"KEY.createOrReplaceTempView(\"KEY\")"
				],
				"execution_count": 26
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write success message for production script"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Scripts have successfully executed\")"
				],
				"execution_count": null
			}
		]
	}
}