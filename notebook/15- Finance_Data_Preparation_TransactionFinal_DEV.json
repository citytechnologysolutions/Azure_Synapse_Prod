{
	"name": "15- Finance_Data_Preparation_TransactionFinal_DEV",
	"properties": {
		"folder": {
			"name": "ARCHIVE/DEV/Archived/Transactions Notebooks DEV/Archive"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "68f22be9-dfde-4874-9a95-c3f4f3919654"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#TRANSACTIONS = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_TRANSACTIONS_Transformed.parquet', format='parquet')\r\n",
					"#TRANSACTIONS.createOrReplaceTempView(\"TRANSACTIONS\")"
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"TRANSACTIONS1 = spark.sql(\"\"\"\r\n",
					"SELECT *\r\n",
					"FROM `TRANSACTIONS`\r\n",
					"Where `Posting_Date` >= '2016-04-01' and `Posting_Date` < '2017-04-01'\r\n",
					"\"\"\")\r\n",
					"#TRANSACTIONS1.show()\r\n",
					"TRANSACTIONS1.createOrReplaceTempView(\"TRANSACTIONS1\")"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TRANSACTIONS2 = spark.sql(\"\"\"\r\n",
					"SELECT *\r\n",
					"FROM `TRANSACTIONS`\r\n",
					"Where `Posting_Date` >= '2017-04-01'\r\n",
					"\"\"\")\r\n",
					"#TRANSACTIONS2.show()\r\n",
					"TRANSACTIONS2.createOrReplaceTempView(\"TRANSACTIONS2\")"
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"TRANSACTIONS = spark.sql(\"\"\"\r\n",
					"SELECT *,\r\n",
					"\t\tUpper(if(IsNull(`Depot_Code`),'NON',\r\n",
					"\t\t\tif(`Depot_Code`='','NON',\t\t\r\n",
					"\t\t\t\tif(`Depot_Code` IN ('OS7','O12','O13','O14','O15'),'OFJ',\r\n",
					"\t\t\t\t\tif(`Depot_Code` IN ('O10','O11','HCC'),'OFC',\t\r\n",
					"\t\t\t\t\t\tif(`Depot_Code` IN ('OTT','FTD','FTL','HCD','OS1','OS2','OS3','OS5','OS6'),'OFD',`Depot_Code`)))))) as `Parent_Depot_Code`\r\n",
					"FROM TRANSACTIONS1\r\n",
					"\"\"\")\r\n",
					"#TRANSACTIONS.show()\r\n",
					"TRANSACTIONS.createOrReplaceTempView(\"TRANSACTIONS\")"
				],
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"TRANSACTIONS2A = spark.sql(\"\"\"\r\n",
					"SELECT *,\r\n",
					"\t\tUpper(if(IsNull(`Depot_Code`),'NON',\r\n",
					"\t\t\tif(Depot_Code IN ('OS7','O12','O13','O14','O15'),'OFJ',\r\n",
					"\t\t\t\tif(Depot_Code IN ('O10','O11','HCC'),'OFC',\t\r\n",
					"\t\t\t\t\tif(Depot_Code IN ('OTT','FTD','FTL','HCD','OS1','OS2','OS3','OS5','OS6'),'OFD',`Depot_Code`))))\t)\tas `Parent_Depot_Code`,\r\n",
					"\t\t\r\n",
					"\t\tUpper(\r\n",
					"\t\t\tif(IsNull(SubDepotCode) and IsNull(`Depot_Code`),'NON',\r\n",
					"\t\t\t\tif(SubDepotCode = '###' and  Depot_Code IN ('OFD','OFC','OFJ'),'NON',\r\n",
					"\t\t \t\t\tif(SubDepotCode = '###' and `Depot_Code` <> 'OFD' and `Depot_Code` <> 'OFC' and `Depot_Code` <> 'OFJ',`Depot_Code`,\r\n",
					"\t\t \t\t\t\tif(SubDepotCode = '-' and  Depot_Code IN ('OFD','OFC','OFJ'),'NON',\r\n",
					"\t\t \t\t\t\t\tif(SubDepotCode = '-' and `Depot_Code` <> 'OFD' and `Depot_Code` <> 'OFC' and `Depot_Code` <> 'OFJ',`Depot_Code`,\r\n",
					"\t\t \t\t\t\t\t\tif(SubDepotCode = '' and Depot_Code IN ('OFD','OFC','OFJ'),'NON',\r\n",
					"\t\t \t\t\t\t\t\t\tif(SubDepotCode = '' and  `Depot_Code` <> 'OFD' and `Depot_Code` <> 'OFC' and `Depot_Code` <> 'OFJ',`Depot_Code`,SubDepotCode)))))))) as `Depot_CodeX`\t\r\n",
					"FROM TRANSACTIONS2\r\n",
					"\"\"\")\r\n",
					"#TRANSACTIONS2A.show()\r\n",
					"TRANSACTIONS2A.createOrReplaceTempView(\"TRANSACTIONS2A\")"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TRANSACTIONS2A = TRANSACTIONS2A.drop(\"Depot_Code\")\r\n",
					"TRANSACTIONS2A.createOrReplaceTempView(\"TRANSACTIONS2A\")"
				],
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"TRANSACTIONS2A = spark.sql(\"\"\"\r\n",
					"SELECT *,\r\n",
					"\t\tif(`Depot_CodeX` = 'HHL','HDH', `Depot_CodeX`) as `Depot_Code`\r\n",
					"\t\t--`Posting_Date` as `H_MFRLocationDate`\t\r\n",
					"FROM TRANSACTIONS2A\r\n",
					"\"\"\")\r\n",
					"#TRANSACTIONS2A.show()\r\n",
					"TRANSACTIONS2A.createOrReplaceTempView(\"TRANSACTIONS2A\")"
				],
				"execution_count": 51
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT  `Customer_Code_KEY`,\r\n",
					"\t\t`Customer_Reference`,\r\n",
					"\t\t`Daily_Budget_Total`,\r\n",
					"\t\t`LMSTransID`,\r\n",
					"\t\t`SpecDel`,\r\n",
					"\t\t`Depot_Code`,\r\n",
					"\t\t`Document_Category`,\r\n",
					"\t\t`Document_Number`,\r\n",
					"\t\t`Document_Type`,\r\n",
					"\t\t--`Emp Code`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas `WeeklyEmpCode`,\r\n",
					"\t\t--`Employee`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas `WeeklyEmployee`,\r\n",
					"\t\t`Fleet_Code`,\r\n",
					"\t\t`Fleet_KEY`,\r\n",
					"\t\t`Goods_Receipt_Number_KEY`,\r\n",
					"\t\t`Item_Code_KEY`,\r\n",
					"\t\t--`LabourDefinition`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas `WeeklyLabourDefinition`,\r\n",
					"\t\t--(`Line Total`)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas `SubIntRecovery Line Total` ,\r\n",
					"\t\t`LMS_Customer`,\r\n",
					"\t\t`LMSDepotRegion`,\r\n",
					"\t\t`MAINKEY2`,\r\n",
					"\t\t`MAINKEY2_ST`,\r\n",
					"\t\t`Movement_Type`,\r\n",
					"\t\t`ObjType`,\r\n",
					"\t\t`Parent_Depot_Code`,\r\n",
					"\t\t--`Payroll`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas `WeeklyPayroll`,\r\n",
					"\t\t`Posting_Date`,\r\n",
					"\t\t`Price_Before_Discount`,\r\n",
					"\t\t`Registration_No`,\r\n",
					"\t\t`Revenue/Expense_Category`,\r\n",
					"\t\t--`Sub Depot`,\r\n",
					"\t\t`SubDepotCode`,\r\n",
					"\t\t`Supplier_Code_KEY`,\r\n",
					"\t\t`Supplier_Reference`,\r\n",
					"\t\t'_SYS00000047338City Logistics New'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas `System_Account_Code_KEY`,\r\n",
					"\t\t`Transaction Detail`,\r\n",
					"\t\t`TransId`,\r\n",
					"\t\t`Type`,\r\n",
					"\t\t`Rate2`,\r\n",
					"\t\t`IR_Number`--,\r\n",
					"\t\t--`WeeklyType`\r\n",
					"        \r\n",
					"FROM `TRANSACTIONS`\r\n",
					"WHERE `System_Account_Code_KEY` IN ('_SYS00000049018City Logistics New','_SYS00000049034City Logistics New','_SYS00000047338City Logistics New')\r\n",
					"AND `Document_Category`<> 'Journal'"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Scripts have successfully executed\")"
				],
				"execution_count": null
			}
		]
	}
}