{
	"name": "7- Finance_Data_Preparation_Sales_PROD",
	"properties": {
		"folder": {
			"name": "ARCHIVE/PROD/Transactions Notebooks PROD"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 3,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "3",
				"spark.dynamicAllocation.maxExecutors": "3",
				"spark.autotune.trackingId": "32bbe010-6264-444b-9567-f910ae8dc06a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Load Source Data from BlobStorage"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#dboOINV = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOINV.parquet', format='parquet')\r\n",
					"#dboOINV.createOrReplaceTempView(\"dboOINV\")\r\n",
					"\r\n",
					"#dboORIN = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboORIN.parquet', format='parquet')\r\n",
					"#dboORIN.createOrReplaceTempView(\"dboORIN\")\r\n",
					"\r\n",
					"#dboOPCH = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOPCH.parquet', format='parquet')\r\n",
					"#dboOPCH.createOrReplaceTempView(\"dboOPCH\")\r\n",
					"\r\n",
					"#dboORPC = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboORPC.parquet', format='parquet')\r\n",
					"#dboORPC.createOrReplaceTempView(\"dboORPC\")\r\n",
					"\r\n",
					"#dboOPDN = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOPDN.parquet', format='parquet')\r\n",
					"#dboOPDN.createOrReplaceTempView(\"dboOPDN\")\r\n",
					"\r\n",
					"#dboOIGE = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOIGE.parquet', format='parquet')\r\n",
					"#dboOIGE.createOrReplaceTempView(\"dboOIGE\")\r\n",
					"\r\n",
					"#dboORPD = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboORPD.parquet', format='parquet')\r\n",
					"#dboORPD.createOrReplaceTempView(\"dboORPD\")\r\n",
					"\r\n",
					"#dboINV1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboINV1.parquet', format='parquet')\r\n",
					"#dboINV1.createOrReplaceTempView(\"dboINV1\")\r\n",
					"\r\n",
					"#dboRIN1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboRIN1.parquet', format='parquet')\r\n",
					"#dboRIN1.createOrReplaceTempView(\"dboRIN1\")\r\n",
					"\r\n",
					"#dboRPC1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboRPC1.parquet', format='parquet')\r\n",
					"#dboRPC1.createOrReplaceTempView(\"dboRPC1\")\r\n",
					"\r\n",
					"#dboPDN1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboPDN1.parquet', format='parquet')\r\n",
					"#dboPDN1.createOrReplaceTempView(\"dboPDN1\")\r\n",
					"\r\n",
					"#dboIGE1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboIGE1.parquet', format='parquet')\r\n",
					"#dboIGE1.createOrReplaceTempView(\"dboIGE1\")\r\n",
					"\r\n",
					"#F_Purchase_Order = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Purchase_Order.parquet', format='parquet')\r\n",
					"#F_Purchase_Order.createOrReplaceTempView(\"F_Purchase_Order\")\r\n",
					"\r\n",
					"#F_Sales_Invoice = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Sales_Invoice.parquet', format='parquet')\r\n",
					"#F_Sales_Invoice.createOrReplaceTempView(\"F_Sales_Invoice\")\r\n",
					"\r\n",
					"#F_Sales_Credit_Note = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Sales_Credit_Note.parquet', format='parquet')\r\n",
					"#F_Sales_Credit_Note.createOrReplaceTempView(\"F_Sales_Credit_Note\")\r\n",
					"\r\n",
					"#F_Purchase_Invoice = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Purchase_Invoice.parquet', format='parquet')\r\n",
					"#F_Purchase_Invoice.createOrReplaceTempView(\"F_Purchase_Invoice\")\r\n",
					"\r\n",
					"#F_Purchase_Credit_Note = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Purchase_Credit_Note.parquet', format='parquet')\r\n",
					"#F_Purchase_Credit_Note.createOrReplaceTempView(\"F_Purchase_Credit_Note\")\r\n",
					"\r\n",
					"#F_Goods_Receipt_Notes = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Goods_Receipt_Notes.parquet', format='parquet')\r\n",
					"#F_Goods_Receipt_Notes.createOrReplaceTempView(\"F_Goods_Receipt_Notes\")\r\n",
					"\r\n",
					"#F_Goods_Returns = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Facts/F_Goods_Returns.parquet', format='parquet')\r\n",
					"#F_Goods_Returns.createOrReplaceTempView(\"F_Goods_Returns\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Start of QView Script translation of to MSSQL"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SALES_INVOICE_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT \r\n",
					"    DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt as `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as SI,\r\n",
					"    RoundDif,\r\n",
					"    Rounding\r\n",
					"FROM dboOINV\r\n",
					"\"\"\")\r\n",
					"#SALES_INVOICE_HEADER.show()\r\n",
					"SALES_INVOICE_HEADER.createOrReplaceTempView(\"SALES_INVOICE_HEADER\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SALES_CREDIT_NOTE_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT \r\n",
					"    DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt\tas `Discount %`,\r\n",
					"    --VatSum,s\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as SCN\r\n",
					"FROM dboORIN\r\n",
					"\"\"\")\r\n",
					"#SALES_CREDIT_NOTE_HEADER.show()\r\n",
					"SALES_CREDIT_NOTE_HEADER.createOrReplaceTempView(\"SALES_CREDIT_NOTE_HEADER\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PURCHASE_INVOICE_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt\tas `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as PI,\r\n",
					"    RoundDif,\r\n",
					"    Rounding\r\n",
					"FROM dboOPCH\r\n",
					"\"\"\")\r\n",
					"#PURCHASE_INVOICE_HEADER.show()\r\n",
					"PURCHASE_INVOICE_HEADER.createOrReplaceTempView(\"PURCHASE_INVOICE_HEADER\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PURCHASE_CREDIT_NOTE_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT \r\n",
					"    DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt as `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as PCN\r\n",
					"FROM dboORPC\r\n",
					"\"\"\")\r\n",
					"#PURCHASE_CREDIT_NOTE_HEADER.show()\r\n",
					"PURCHASE_CREDIT_NOTE_HEADER.createOrReplaceTempView(\"PURCHASE_CREDIT_NOTE_HEADER\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"GOODS_RECEIPTS_NOTES_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt\tas `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as GRN\r\n",
					"FROM dboOPDN\r\n",
					"\"\"\")\r\n",
					"#GOODS_RECEIPTS_NOTES_HEADER.show()\r\n",
					"GOODS_RECEIPTS_NOTES_HEADER.createOrReplaceTempView(\"GOODS_RECEIPTS_NOTES_HEADER\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"GOODS_ISSUES_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocTime,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt\tas `Discount_%`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as GI\r\n",
					"FROM dboOIGE\r\n",
					"\"\"\")\r\n",
					"#GOODS_ISSUES_HEADER.show()\r\n",
					"GOODS_ISSUES_HEADER.createOrReplaceTempView(\"GOODS_ISSUES_HEADER\")"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"Goods_Receipts_Header = spark.sql(\"\"\"\r\n",
					"SELECT DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt as `Discount_%`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as GRN\r\n",
					"FROM dboOPDN\r\n",
					"\"\"\")\r\n",
					"#Goods_Receipts_Header.show()\r\n",
					"Goods_Receipts_Header.createOrReplaceTempView(\"Goods_Receipts_Header\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"GOODS_RETURNS_HEADER = spark.sql(\"\"\"\r\n",
					"SELECT \r\n",
					"    DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    ObjType,\r\n",
					"    DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    DiscPrcnt as `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as GR2,\r\n",
					"    RoundDif,\r\n",
					"    Rounding\r\n",
					"FROM dboORPD\r\n",
					"\"\"\")\r\n",
					"#GOODS_RETURNS_HEADER.show()\r\n",
					"GOODS_RETURNS_HEADER.createOrReplaceTempView(\"GOODS_RETURNS_HEADER\")"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Sales_Invoice = spark.sql(\"\"\" \r\n",
					"SELECT oinv.DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    oinv.ObjType,\r\n",
					"    oinv.DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    oinv.DiscPrcnt as `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    U_DEPOT,\r\n",
					"    U_USERCODE,\r\n",
					"    U_EXPENSE_DEPOT,\r\n",
					"    U_TRANSACTION_DATE,\r\n",
					"    1 as SI,\r\n",
					"    RoundDif,\r\n",
					"    Rounding,\r\n",
					"    inv1.Volume,\r\n",
					"    LineNum,\r\n",
					"    LineStatus,\r\n",
					"    ItemCode,\r\n",
					"    Dscription,\r\n",
					"    Quantity,\r\n",
					"    OpenQty,\r\n",
					"    Price,\r\n",
					"    Rate,\r\n",
					"    inv1.DiscPrcnt,\r\n",
					"    LineTotal,\r\n",
					"    OpenSum,\r\n",
					"    PriceBefDi,\r\n",
					"    inv1.DocDate as `DocDate (Line)`,\r\n",
					"    inv1.Project,\r\n",
					"    VatPrcnt,\r\n",
					"    VatGroup,\r\n",
					"    inv1.VatSum,\r\n",
					"    GrssProfit,\r\n",
					"    U_REASON,\r\n",
					"    U_LANE,\r\n",
					"    U_EXPENSEITEM,\r\n",
					"    inv1.U_FUELDATE,\r\n",
					"    AcctCode,\r\n",
					"    \"City Logistics New\" as Company\r\n",
					"FROM dboOINV oinv\r\n",
					"LEFT JOIN dboINV1 inv1\r\n",
					"ON oinv.DocEntry = inv1.DocEntry\r\n",
					"--WHERE oinv.CANCELED = 'N'\r\n",
					"ORDER BY oinv.DocEntry\r\n",
					"\"\"\")\r\n",
					"#Sales_Invoice.show()\r\n",
					"Sales_Invoice.createOrReplaceTempView(\"Sales_Invoice\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Sales_Credit_Note = spark.sql(\"\"\"\r\n",
					"SELECT orin.DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    orin.ObjType,\r\n",
					"    orin.DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    orin.DiscPrcnt\tas `Discount %`,\r\n",
					"    --VatSum,s\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    \"U_DEPOT\",\r\n",
					"    \"U_USERCODE\",\r\n",
					"    \"U_EXPENSE_DEPOT\",\r\n",
					"    \"U_TRANSACTION_DATE\",\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    1 as SCN,\r\n",
					"    rin5.Volume,\r\n",
					"    LineNum,\r\n",
					"    LineStatus,\r\n",
					"    ItemCode,\r\n",
					"    Dscription,\r\n",
					"    Quantity,\r\n",
					"    OpenQty,\r\n",
					"    Price,\r\n",
					"    Rate,\r\n",
					"    LineTotal,\r\n",
					"    OpenSum,\r\n",
					"    PriceBefDi,\r\n",
					"    rin5.Project,\r\n",
					"    VatPrcnt,\r\n",
					"    VatGroup,\r\n",
					"    rin5.VatSum,\r\n",
					"    GrssProfit,\r\n",
					"    \"U_REASON\",\r\n",
					"    \"U_LANE\",\r\n",
					"    \"U_EXPENSEITEM\",\r\n",
					"    \"U_FUELDATE\",\r\n",
					"    AcctCode \r\n",
					"FROM dboORIN orin\r\n",
					"LEFT JOIN dboRIN1 rin5\r\n",
					"       ON orin.DocEntry = rin5.DocEntry\r\n",
					"--WHERE orin.CANCELED = 'N'\r\n",
					"ORDER BY orin.DocEntry\r\n",
					"\"\"\")\r\n",
					"#Sales_Credit_Note.show()\r\n",
					"Sales_Credit_Note.createOrReplaceTempView(\"Sales_Credit_Note\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Purchase_Credit_Note = spark.sql(\"\"\"\r\n",
					"SELECT orpc.DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    orpc.ObjType,\r\n",
					"    orpc.DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    orpc.DiscPrcnt as `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as `DocDisc`,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    U_DEPOT,\r\n",
					"    U_USERCODE,\r\n",
					"    U_EXPENSE_DEPOT,\r\n",
					"    U_TRANSACTION_DATE,\r\n",
					"    --'$(vCompany)' as Company,\r\n",
					"    1 as PCN,\r\n",
					"    rpc1.Volume,\r\n",
					"    LineNum,\r\n",
					"    LineStatus,\r\n",
					"    ItemCode,\r\n",
					"    Dscription,\r\n",
					"    Quantity,\r\n",
					"    OpenQty,\r\n",
					"    Price,\r\n",
					"    Rate,\r\n",
					"    rpc1.DiscPrcnt,\r\n",
					"    LineTotal,\r\n",
					"    OpenSum,\r\n",
					"    PriceBefDi,\r\n",
					"    rpc1.DocDate as `DocDate (Line)`,\r\n",
					"    rpc1.Project,\r\n",
					"    VatPrcnt,\r\n",
					"    VatGroup,\r\n",
					"    rpc1.VatSum,\r\n",
					"    GrssProfit,\r\n",
					"    U_REASON,\r\n",
					"    U_LANE,\r\n",
					"    U_RATE,\r\n",
					"    U_EXPENSEITEM,\r\n",
					"    rpc1.U_FUELDATE,\r\n",
					"    U_IR_NUMBER,\r\n",
					"    AcctCode,\r\n",
					"    \"City Logistics New\" as Company\r\n",
					"FROM dboORPC orpc\r\n",
					"LEFT JOIN dboRPC1 rpc1\r\n",
					"ON orpc.DocEntry = rpc1.DocEntry\r\n",
					"--WHERE orpc.CANCELED = 'N'\r\n",
					"ORDER BY orpc.DocEntry\r\n",
					"\"\"\")\r\n",
					"#Purchase_Credit_Note.show()\r\n",
					"Purchase_Credit_Note.createOrReplaceTempView(\"Purchase_Credit_Note\")"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Goods_Receipt_Notes = spark.sql(\"\"\"\r\n",
					"SELECT opdn.DocEntry,\r\n",
					"    DocNum,\r\n",
					"    DocType,\r\n",
					"    CANCELED,\r\n",
					"    opdn.ObjType,\r\n",
					"    opdn.DocDate,\r\n",
					"    DocDueDate,\r\n",
					"    CardCode,\r\n",
					"    CardName,\r\n",
					"    NumAtCard,\r\n",
					"    opdn.DiscPrcnt as `Discount %`,\r\n",
					"    --VatSum,\r\n",
					"    DiscSum as DocDisc,\r\n",
					"    DocTotal,\r\n",
					"    Comments,\r\n",
					"    TransId,\r\n",
					"    UserSign,\r\n",
					"    U_DEPOT,\r\n",
					"    U_USERCODE,\r\n",
					"    U_EXPENSE_DEPOT,\r\n",
					"    U_TRANSACTION_DATE,\r\n",
					"    1 as GRN,\r\n",
					"    pdn1.Volume,\r\n",
					"    LineNum,\r\n",
					"    LineStatus,\r\n",
					"    ItemCode,\r\n",
					"    Dscription,\r\n",
					"    Quantity,\r\n",
					"    OpenQty,\r\n",
					"    Price,\r\n",
					"    Rate,\r\n",
					"    pdn1.DiscPrcnt,\r\n",
					"    LineTotal,\r\n",
					"    OpenSum,\r\n",
					"    PriceBefDi,\r\n",
					"    pdn1.DocDate as `DocDate (Line)`,\r\n",
					"    pdn1.Project,\r\n",
					"    VatPrcnt,\r\n",
					"    VatGroup,\r\n",
					"    pdn1.VatSum,\r\n",
					"    GrssProfit,\r\n",
					"    U_REASON,\r\n",
					"    U_LANE,\r\n",
					"    U_EXPENSEITEM,\r\n",
					"    pdn1.U_FUELDATE,\r\n",
					"    U_RATE,\r\n",
					"    U_ODO_START,\r\n",
					"    U_ODO_END,\r\n",
					"    U_IR_NUMBER,\r\n",
					"    AcctCode,\r\n",
					"    TrgetEntry,\r\n",
					"    \"City Logistics New\" as Company,\r\n",
					"    TargetType,\r\n",
					"    BaseRef,\r\n",
					"    pdn1.BaseEntry\r\n",
					"FROM dboOPDN opdn\r\n",
					"LEFT JOIN dboPDN1 pdn1\r\n",
					"ON opdn.DocEntry = pdn1.DocEntry\r\n",
					"--WHERE opdn.CANCELED = 'N'\r\n",
					"--AND opdn.TransId IN (311478,311479,311480,311481,311482,311484,311485)\r\n",
					"ORDER BY opdn.DocEntry\r\n",
					"\"\"\")\r\n",
					"#Goods_Receipt_Notes.show()\r\n",
					"Goods_Receipt_Notes.createOrReplaceTempView(\"Goods_Receipt_Notes\")"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Goods_Receipts = spark.sql(\"\"\"\r\n",
					"SELECT grnh.*,\r\n",
					"    Volume,\r\n",
					"    LineNum,\r\n",
					"    LineStatus,\r\n",
					"    ItemCode,\r\n",
					"    Dscription,\r\n",
					"    Quantity,\r\n",
					"    OpenQty,\r\n",
					"    Price,\r\n",
					"    Rate,\r\n",
					"    LineTotal,\r\n",
					"    OpenSum,\r\n",
					"    PriceBefDi,\r\n",
					"    pdn1.DocDate as `DocDate (Line)`,\r\n",
					"    Project,\r\n",
					"    VatPrcnt,\r\n",
					"    VatGroup,\r\n",
					"    VatSum,\r\n",
					"    GrssProfit,\r\n",
					"    \"U_REASON\",\r\n",
					"    \"U_LANE\",\r\n",
					"    \"U_EXPENSEITEM\",\r\n",
					"    \"U_FUELDATE\",\r\n",
					"    \"U_RATE\",\r\n",
					"    \"U_ODO_START\",\r\n",
					"    \"U_ODO_END\",\r\n",
					"    \"U_IR_NUMBER\",\r\n",
					"    AcctCode,\r\n",
					"    TrgetEntry,\r\n",
					"    TargetType,\r\n",
					"    BaseRef,\r\n",
					"    BaseEntry,\r\n",
					"    1 as GRN\r\n",
					"FROM GOODS_RECEIPTS_NOTES_HEADER grnh\r\n",
					"LEFT JOIN dboPDN1 pdn1\r\n",
					"       ON grnh.DocEntry = pdn1.DocEntry\r\n",
					"\"\"\")\r\n",
					"#Goods_Receipts.show()\r\n",
					"Goods_Receipts.createOrReplaceTempView(\"Goods_Receipts\")"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Goods_Issues = spark.sql(\"\"\"\r\n",
					"SELECT gih.*,\r\n",
					"    Volume,\r\n",
					"    LineNum,\r\n",
					"    LineStatus,\r\n",
					"    ItemCode,\r\n",
					"    Dscription,\r\n",
					"    Quantity,\r\n",
					"    OpenQty,\r\n",
					"    Price,\r\n",
					"    Rate,\r\n",
					"    DiscPrcnt,\r\n",
					"    Quantity * StockPrice as LineTotal,\r\n",
					"    OpenSum,\r\n",
					"    PriceBefDi,\r\n",
					"    ige1.DocDate as `DocDate_Line`,\r\n",
					"    Project,\r\n",
					"    VatPrcnt,\r\n",
					"    VatGroup,\r\n",
					"    VatSum,\r\n",
					"    GrssProfit,\r\n",
					"    \"U_REASON\",\r\n",
					"    \"U_LANE\",\r\n",
					"    \"U_EXPENSEITEM\",\r\n",
					"    \"U_FUELDATE\",\r\n",
					"    \"U_NEWSEAL\",\r\n",
					"    \"U_ODO_END\",\r\n",
					"    \"U_ODO_START\",\r\n",
					"    \"U_OLDSEAL\",\r\n",
					"    \"U_OPENINGPUMP\",\r\n",
					"    \"U_CLOSINGPUMP\",\r\n",
					"    \"U_PUMP\",\r\n",
					"    \"U_IR_NUMBER\",\r\n",
					"    AcctCode\r\n",
					"FROM GOODS_ISSUES_HEADER gih\r\n",
					"LEFT JOIN dboIGE1 ige1\r\n",
					"       ON gih.DocEntry = ige1.DocEntry\r\n",
					"\"\"\")\r\n",
					"#Goods_Issues.show()\r\n",
					"Goods_Issues.createOrReplaceTempView(\"Goods_Issues\")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TMPDOCDISC = spark.sql(\"\"\"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     (DocDisc * -1) as DocDisc,\r\n",
					"     'Sales Invoice' as `Document_Category`\r\n",
					"FROM SALES_INVOICE_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc,\r\n",
					"     'Sales Credit Note' as `Document_Category`\r\n",
					"FROM SALES_CREDIT_NOTE_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc,\r\n",
					"     'Purchase Invoice' as `Document_Category`\r\n",
					"FROM PURCHASE_INVOICE_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc * -1,\r\n",
					"     'Purchase Credit Note' as `Document_Category`\r\n",
					"FROM PURCHASE_CREDIT_NOTE_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc,\r\n",
					"     'Goods Receipt Note' as `Document_Category`\r\n",
					"FROM GOODS_RECEIPTS_NOTES_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc,\r\n",
					"     'Goods Issue' as `Document_Category`\r\n",
					"FROM GOODS_ISSUES_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc,\r\n",
					"     'Goods Receipt' as `Document_Category`\r\n",
					"FROM GOODS_ISSUES_HEADER\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"     DocNum, \r\n",
					"     DiscSum * -1 as DocDisc,\r\n",
					"     'Goods Receipt' as `Document_Category`\r\n",
					"FROM dboOPDN\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT Company, \r\n",
					"     DocNum, \r\n",
					"     DocDisc * -1 as DocDisc,\r\n",
					"     'Goods Return' as `Document_Category`\r\n",
					"FROM GOODS_RETURNS_HEADER\r\n",
					"\"\"\")\r\n",
					"#TMPDOCDISC.show()\r\n",
					"TMPDOCDISC.createOrReplaceTempView(\"TMPDOCDISC\")"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TMPLINES = spark.sql(\"\"\"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Sales Invoice' as `Document_Category`\r\n",
					"FROM Sales_Invoice\r\n",
					"group by DocNum, \r\n",
					"         Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Sales Credit Note' as `Document_Category`\r\n",
					"FROM Sales_Credit_Note\r\n",
					"group by DocNum,\r\n",
					"         Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Purchase Credit Note' as `Document_Category`\r\n",
					"FROM F_Purchase_Credit_Note\r\n",
					"group by DocNum, \r\n",
					"\t\t Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Goods Receipt Note' as `Document_Category`\r\n",
					"FROM F_Goods_Receipt_Notes\r\n",
					"group by DocNum, \r\n",
					"\t\t Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Goods Receipt' as `Document_Category`\r\n",
					"FROM Goods_Receipts\r\n",
					"group by DocNum,\r\n",
					"         Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Goods Issue' as `Document_Category`\r\n",
					"FROM Goods_Issues\r\n",
					"group by DocNum, \r\n",
					"\t\t Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Goods Return' as `Document_Category`\r\n",
					"FROM F_Goods_Returns\r\n",
					"group by DocNum, \r\n",
					"\t\t Company\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT DocNum,\r\n",
					"\t count(LineNum) as NoLines,\r\n",
					"\t Company,\r\n",
					"\t 'Purchase Invoice' as `Document_Category`\r\n",
					"FROM F_Purchase_Invoice \r\n",
					"group by DocNum, \r\n",
					"\t\t Company\r\n",
					"\"\"\")\r\n",
					"#TMPLINES.show()\r\n",
					"TMPLINES.createOrReplaceTempView(\"TMPLINES\")"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"TMPDOCDISC2 = spark.sql(\"\"\"\r\n",
					"SELECT TMPDOCDISC.*, TMPLINES.NoLines\r\n",
					"FROM TMPDOCDISC \r\n",
					"LEFT JOIN TMPLINES\r\n",
					"ON TMPDOCDISC.DocNum = TMPLINES.DocNum\r\n",
					"AND TMPDOCDISC.Document_Category = TMPLINES.Document_Category\r\n",
					"\"\"\")\r\n",
					"#TMPDOCDISC2.show()\r\n",
					"TMPDOCDISC2.createOrReplaceTempView(\"TMPDOCDISC2\")"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TMPDOCDISC3 = spark.sql(\"\"\"\r\n",
					"SELECT *\r\n",
					"      -- ,DocDisc/NoLines as `Discount`\r\n",
					"FROM TMPDOCDISC2\r\n",
					"\"\"\")\r\n",
					"#TMPDOCDISC3.show()\r\n",
					"TMPDOCDISC3.createOrReplaceTempView(\"TMPDOCDISC3\")"
				],
				"execution_count": 19
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write success message for production script"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Scripts have successfully executed\")"
				],
				"execution_count": null
			}
		]
	}
}