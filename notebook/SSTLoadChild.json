{
	"name": "SSTLoadChild",
	"properties": {
		"folder": {
			"name": "TRANSFORM/ARCHIVE/01 SEMI STRUCTURED/03_LMS + ORV"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "dbc2ba2c-c10e-4ae3-9e05-069573f58250"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse_Prod/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace-prod/bigDataPools/PRDSparkPool",
				"name": "PRDSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace-prod.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/PRDSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Environment = mssparkutils.env.getWorkspaceName()\r\n",
					"# if 'prod' in Environment:\r\n",
					"#     StorageAccount = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountRead = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountRead2 = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountWrite = 'citylogisticsstorageprod'\r\n",
					"# else:\r\n",
					"#     StorageAccount = 'citylogisticsstorage'\r\n",
					"#     StorageAccountRead = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountRead2 = 'citylogisticsstorage'\r\n",
					"#     StorageAccountWrite = 'citylogisticsstorage'\r\n",
					"\r\n",
					"# # ' + StorageAccount + '"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"source": [
					"# #Create DataFrame for the dboloads LMS Table\r\n",
					"# dboloads = spark.read.load('abfss://synapse@' + StorageAccountRead + '.dfs.core.windows.net/Unstructured Data/LMS/dboloads.parquet', format='parquet')\r\n",
					"# dboloads.createOrReplaceTempView(\"dboloads\")\r\n",
					"\r\n",
					"# #Create DataFrame for the sstparcelbyload LMS Table\r\n",
					"# sstparcelbyload = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Semi Structured Data/OPS/sstparcelbyload.parquet', format='parquet')\r\n",
					"# sstparcelbyload.createOrReplaceTempView(\"sstparcelbyload\")\r\n",
					"\r\n",
					"# #Create DataFrame for the dbosroute LMS Table\r\n",
					"# dbosroute = spark.read.load('abfss://synapse@' + StorageAccountRead + '.dfs.core.windows.net/Unstructured Data/LMS/dbosroute.parquet', format='parquet')\r\n",
					"# dbosroute.createOrReplaceTempView(\"dbosroute\")\r\n",
					"\r\n",
					"# #Create DataFrame for the dbodriver LMS Table\r\n",
					"# dbodriver = spark.read.load('abfss://synapse@' + StorageAccountRead + '.dfs.core.windows.net/Unstructured Data/LMS/dbodriver.parquet', format='parquet')\r\n",
					"# dbodriver.createOrReplaceTempView(\"dbodriver\")\r\n",
					"\r\n",
					"# #Create DataFrame for the dbovehicle LMS Table\r\n",
					"# dbovehicle = spark.read.load('abfss://synapse@' + StorageAccountRead + '.dfs.core.windows.net/Unstructured Data/LMS/dbovehicle.parquet', format='parquet')\r\n",
					"# dbovehicle.createOrReplaceTempView(\"dbovehicle\")\r\n",
					"\r\n",
					"# #Create DataFrame for the dbovehiclebasic LMS Table\r\n",
					"# dbovehiclebasic = spark.read.load('abfss://synapse@' + StorageAccountRead + '.dfs.core.windows.net/Unstructured Data/CLMasterData/dbovehiclebasic.parquet', format='parquet')\r\n",
					"# dbovehiclebasic.createOrReplaceTempView(\"dbovehiclebasic\")\r\n",
					""
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"sstloadchild\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    l.id as lms_loads_id\r\n",
					"    ,l.routeid as lms_loads_routeid\r\n",
					"    ,l.driverid as lms_loads_driverid\r\n",
					"    ,l.sealno as lms_loads_sealno\r\n",
					"    ,l.vehicleid as lms_loads_vehicleid\r\n",
					"    ,l.ttypeid as lms_loads_ttypeid\r\n",
					"    ,l.userid as lms_loads_userid\r\n",
					"    ,l.ldate as lms_loads_ldate\r\n",
					"    ,l.courierid as lms_loads_courierid\r\n",
					"    ,l.site as lms_loads_site\r\n",
					"    ,l.fromlocid as lms_loads_fromlocid\r\n",
					"    ,l.tolocid as lms_loads_tolocid\r\n",
					"    ,l.cdate as lms_loads_cdate\r\n",
					"    ,l.trailer1 as lms_loads_trailer1\r\n",
					"    ,l.trailer2 as lms_loads_trailer2\r\n",
					"    ,l.cref as lms_loads_cref\r\n",
					"    ,l.debriefed as lms_loads_debriefed\r\n",
					"    ,l.mrpflag as lms_loads_mrpflag\r\n",
					"    ,l.mrpcflag as lms_loads_mrpcflag\r\n",
					"    ,l.finalflag as lms_loads_finalflag\r\n",
					"    ,l.alidaflag as lms_loads_alidaflag\r\n",
					"    ,l.puibts as lms_loads_puibts\r\n",
					"    ,l.pucols as lms_loads_pucols\r\n",
					"    ,l.planningref as lms_loads_planningref\r\n",
					"    ,l.interfacedate as lms_loads_interfacedate\r\n",
					"    ,l.nosealsret as lms_loads_nosealsret\r\n",
					"    ,l.excludeopsi as lms_loads_excludeopsi\r\n",
					"    ,l.dccref as lms_loads_dccref\r\n",
					"    ,l.srouteid as lms_loads_srouteid\r\n",
					"    ,l.fuellitres as lms_loads_fuellitres\r\n",
					"    ,l.outsourcedcrew as lms_loads_outsourcedcrew\r\n",
					"    ,l.masterloadid as lms_loads_masterloadid\r\n",
					"    ,l.securitygatedespatched as lms_loads_securitygatedespatched\r\n",
					"    ,l.securitygateuserid as lms_loads_securitygateuserid\r\n",
					"    ,l.securitygatearrived as lms_loads_securitygatearrived\r\n",
					"    ,l.securitygatearriveduserid as lms_loads_securitygatearriveduserid\r\n",
					"    ,l.lastupdate as lms_loads_lastupdate\r\n",
					"    ,l.bayno as lms_loads_bayno\r\n",
					"    ,l.costs as lms_loads_costs\r\n",
					"    ,l.estdeparturedatetime as lms_loads_estdeparturedatetime\r\n",
					"    ,l.totalweight as lms_loads_totalweight\r\n",
					"    ,l.ovrignore as lms_loads_ovrignore\r\n",
					"    ,l.childloadid as lms_loads_childloadid\r\n",
					"    ,l.orvcode as lms_loads_orvcode\r\n",
					"    ,l.companyid as lms_loads_companyid\r\n",
					"    ,l.editloaddate as lms_loads_editloaddate\r\n",
					"    ,l.reopeneddate as lms_loads_reopeneddate\r\n",
					"    ,l.reopeneduserid as lms_loads_reopeneduserid\r\n",
					"    ,l.novehicle as lms_loads_novehicle\r\n",
					"    ,l.mobilefeedbackreasonid as lms_loads_mobilefeedbackreasonid\r\n",
					"    ,l.direct as lms_loads_direct\r\n",
					"    ,l.noofpcls as lms_loads_noofpcls\r\n",
					"    ,l.debriefdt as lms_loads_debriefdt\r\n",
					"    ,l.httpcode as lms_loads_httpcode\r\n",
					"    ,l.parentloadid as lms_loads_parentloadid\r\n",
					"    ,l.mrpobversion as lms_loads_mrpobversion\r\n",
					"    ,pbl.lms_parcelbyload_loadid as lms_parcelbyload_loadid\r\n",
					"    ,pbl.lms_parcelbyload_aggrweight as lms_parcelbyload_aggrweight\r\n",
					"    ,pbl.lms_parcelbyload_aggrchargeweight as lms_parcelbyload_aggrchargeweight\r\n",
					"    ,pbl.lms_parcelbyload_aggrvolweight as lms_parcelbyload_aggrvolweight\r\n",
					"    ,pbl.lms_parcelbyload_aggrvolumiserweight as lms_parcelbyload_aggrvolumiserweight\r\n",
					"    ,pbl.lms_parcelbyload_aggrmaxweight as lms_parcelbyload_aggrmaxweight\r\n",
					"    ,pbl.lms_parcelbyload_aggrnoparcels as lms_parcelbyload_aggrnoparcels\r\n",
					"    ,pbl.lms_parcelbyload_aggrweight as lms_parcelbyload_aggrweightexclspecdel\r\n",
					"    ,pbl.lms_parcelbyload_aggrchargeweight as lms_parcelbyload_aggrchargeweightexclspecdel\r\n",
					"    ,pbl.lms_parcelbyload_aggrvolweight as lms_parcelbyload_aggrvolweightexclspecdel\r\n",
					"    ,pbl.lms_parcelbyload_aggrvolumiserweight as lms_parcelbyload_aggrvolumiserweightexclspecdel\r\n",
					"    ,pbl.lms_parcelbyload_aggrmaxweight as lms_parcelbyload_aggrmaxweightexclspecdel\r\n",
					"    ,pbl.lms_parcelbyload_aggrnoparcels as lms_parcelbyload_aggrnoparcelsexclspecdel\r\n",
					"    ,sr.id as lms_sroute_id\r\n",
					"    ,sr.description as lms_sroute_description\r\n",
					"    ,d.id as lms_driver_id\r\n",
					"    ,d.dname as lms_driver_dname\r\n",
					"    ,u.id as lms_users_id\r\n",
					"    ,u.fullname as lms_users_fullname\r\n",
					"    ,u.site as lms_users_site\r\n",
					"    ,u2.id as lms_users_reopenuserid\r\n",
					"    ,u2.fullname as lms_users_reopenuserfullname\r\n",
					"    ,u2.site as lms_users_reopenusersite\r\n",
					"    ,v.id as lms_vehicle_id\r\n",
					"    ,v.fleetno as lms_vehicle_fleetno\r\n",
					"    ,v.uid as lms_vehicle_uid\r\n",
					"    ,v1.id as lms_vehicle_trailer1id\r\n",
					"    ,v1.fleetno as lms_vehicle_trailer1fleetno\r\n",
					"    ,v1.uid as lms_vehicle_trailer1uid\r\n",
					"    ,v2.id as lms_vehicle_trailer2id\r\n",
					"    ,v2.fleetno as lms_vehicle_trailer2fleetno\r\n",
					"    ,v2.uid as lms_vehicle_trailer2uid\r\n",
					"    ,vb.id as md_vehiclebasic_id\r\n",
					"    ,vb.uid as md_vehiclebasic_uid\r\n",
					"    ,vb.vehicletype as md_vehiclebasic_vehicletype\r\n",
					"    ,vb.internalexternal as md_vehiclebasic_internalexternal\r\n",
					"    ,vb.activeflag as md_vehiclebasic_activeflag\r\n",
					"    ,vb.vehiclestatus as md_vehiclebasic_vehiclestatus\r\n",
					"    ,vb.chassisnumber as md_vehiclebasic_chassisnumber\r\n",
					"    ,vb.depot as md_vehiclebasic_depot\r\n",
					"    ,vb.enginenumber as md_vehiclebasic_enginenumber\r\n",
					"    ,vb.fleetcode as md_vehiclebasic_fleetcode\r\n",
					"    ,vb.fueltype as md_vehiclebasic_fueltype\r\n",
					"    ,vb.registrationnumber as md_vehiclebasic_registrationnumber\r\n",
					"    ,vb.vehicleapplication as md_vehiclebasic_vehicleapplication\r\n",
					"    ,vb.vehiclebodymake as md_vehiclebasic_vehiclebodymake\r\n",
					"    ,vb.vehiclecolour as md_vehiclebasic_vehiclecolour\r\n",
					"    ,vb.vehiclemake as md_vehiclebasic_vehiclemake\r\n",
					"    ,vb.vehiclemodel as md_vehiclebasic_vehiclemodel\r\n",
					"    ,vb.vehicleseries as md_vehiclebasic_vehicleseries\r\n",
					"    ,vb.year as md_vehiclebasic_year\r\n",
					"    ,vb.vehicleownerid as md_vehiclebasic_vehicleownerid\r\n",
					"    ,vb.vehicleowner as md_vehiclebasic_vehicleowner\r\n",
					"    ,vb.staffvehicleflag as md_vehiclebasic_staffvehicleflag\r\n",
					"    ,vb.vehicletrailersize as md_vehiclebasic_vehicletrailersize\r\n",
					"    ,vb.vehicletrailertype as md_vehiclebasic_vehicletrailertype\r\n",
					"    ,vb.vehicleetollclass as md_vehiclebasic_vehicleetollclass\r\n",
					"    ,vb.brn as md_vehiclebasic_brn\r\n",
					"    ,vb.brnnumber as md_vehiclebasic_brnnumber\r\n",
					"    ,vb.vehicleregisterno as md_vehiclebasic_vehicleregisterno\r\n",
					"    ,vb.insdate as md_vehiclebasic_insdate\r\n",
					"    ,vb.insby as md_vehiclebasic_insby\r\n",
					"    ,vb.islinehaulvehicle as md_vehiclebasic_islinehaulvehicle\r\n",
					"    ,vb.internalheight as md_vehiclebasic_internalheight\r\n",
					"    ,vb.internallength as md_vehiclebasic_internallength\r\n",
					"    ,vb.internalvolume as md_vehiclebasic_internalvolume\r\n",
					"    ,vb.internalwidth as md_vehiclebasic_internalwidth\r\n",
					"    ,vb.moddate as md_vehiclebasic_moddate\r\n",
					"    ,vb.trailerflag as md_vehiclebasic_trailerflag\r\n",
					"    ,vb.workflowstatus as md_vehiclebasic_workflowstatus\r\n",
					"    ,vb.approveddate as md_vehiclebasic_approveddate\r\n",
					"    ,vb1.id as md_vehiclebasic_trailer1id\r\n",
					"    ,vb1.uid as md_vehiclebasic_trailer1uid\r\n",
					"    ,vb1.vehicletype as md_vehiclebasic_trailer1vehicletype\r\n",
					"    ,vb1.internalexternal as md_vehiclebasic_trailer1internalexternal\r\n",
					"    ,vb1.activeflag as md_vehiclebasic_trailer1activeflag\r\n",
					"    ,vb1.vehiclestatus as md_vehiclebasic_trailer1vehiclestatus\r\n",
					"    ,vb1.chassisnumber as md_vehiclebasic_trailer1chassisnumber\r\n",
					"    ,vb1.depot as md_vehiclebasic_trailer1depot\r\n",
					"    ,vb1.enginenumber as md_vehiclebasic_trailer1enginenumber\r\n",
					"    ,vb1.fleetcode as md_vehiclebasic_trailer1fleetcode\r\n",
					"    ,vb1.fueltype as md_vehiclebasic_trailer1fueltype\r\n",
					"    ,vb1.registrationnumber as md_vehiclebasic_trailer1registrationnumber\r\n",
					"    ,vb1.vehicleapplication as md_vehiclebasic_trailer1vehicleapplication\r\n",
					"    ,vb1.vehiclebodymake as md_vehiclebasic_trailer1vehiclebodymake\r\n",
					"    ,vb1.vehiclecolour as md_vehiclebasic_trailer1vehiclecolour\r\n",
					"    ,vb1.vehiclemake as md_vehiclebasic_trailer1vehiclemake\r\n",
					"    ,vb1.vehiclemodel as md_vehiclebasic_trailer1vehiclemodel\r\n",
					"    ,vb1.vehicleseries as md_vehiclebasic_trailer1vehicleseries\r\n",
					"    ,vb1.year as md_vehiclebasic_trailer1year\r\n",
					"    ,vb1.vehicleownerid as md_vehiclebasic_trailer1vehicleownerid\r\n",
					"    ,vb1.vehicleowner as md_vehiclebasic_trailer1vehicleowner\r\n",
					"    ,vb1.staffvehicleflag as md_vehiclebasic_trailer1staffvehicleflag\r\n",
					"    ,vb1.vehicletrailersize as md_vehiclebasic_trailer1vehicletrailersize\r\n",
					"    ,vb1.vehicletrailertype as md_vehiclebasic_trailer1vehicletrailertype\r\n",
					"    ,vb1.vehicleetollclass as md_vehiclebasic_trailer1vehicleetollclass\r\n",
					"    ,vb1.brn as md_vehiclebasic_trailer1brn\r\n",
					"    ,vb1.brnnumber as md_vehiclebasic_trailer1brnnumber\r\n",
					"    ,vb1.vehicleregisterno as md_vehiclebasic_trailer1vehicleregisterno\r\n",
					"    ,vb1.insdate as md_vehiclebasic_trailer1insdate\r\n",
					"    ,vb1.insby as md_vehiclebasic_trailer1insby\r\n",
					"    ,vb1.islinehaulvehicle as md_vehiclebasic_trailer1islinehaulvehicle\r\n",
					"    ,vb1.internalheight as md_vehiclebasic_trailer1internalheight\r\n",
					"    ,vb1.internallength as md_vehiclebasic_trailer1internallength\r\n",
					"    ,vb1.internalvolume as md_vehiclebasic_trailer1internalvolume\r\n",
					"    ,vb1.internalwidth as md_vehiclebasic_trailer1internalwidth\r\n",
					"    ,vb1.moddate as md_vehiclebasic_trailer1moddate\r\n",
					"    ,vb1.trailerflag as md_vehiclebasic_trailer1trailerflag\r\n",
					"    ,vb1.workflowstatus as md_vehiclebasic_trailer1workflowstatus\r\n",
					"    ,vb1.approveddate as md_vehiclebasic_trailer1approveddate\r\n",
					"    ,vb2.id as md_vehiclebasic_trailer2id\r\n",
					"    ,vb2.uid as md_vehiclebasic_trailer2uid\r\n",
					"    ,vb2.vehicletype as md_vehiclebasic_trailer2vehicletype\r\n",
					"    ,vb2.internalexternal as md_vehiclebasic_trailer2internalexternal\r\n",
					"    ,vb2.activeflag as md_vehiclebasic_trailer2activeflag\r\n",
					"    ,vb2.vehiclestatus as md_vehiclebasic_trailer2vehiclestatus\r\n",
					"    ,vb2.chassisnumber as md_vehiclebasic_trailer2chassisnumber\r\n",
					"    ,vb2.depot as md_vehiclebasic_trailer2depot\r\n",
					"    ,vb2.enginenumber as md_vehiclebasic_trailer2enginenumber\r\n",
					"    ,vb2.fleetcode as md_vehiclebasic_trailer2fleetcode\r\n",
					"    ,vb2.fueltype as md_vehiclebasic_trailer2fueltype\r\n",
					"    ,vb2.registrationnumber as md_vehiclebasic_trailer2registrationnumber\r\n",
					"    ,vb2.vehicleapplication as md_vehiclebasic_trailer2vehicleapplication\r\n",
					"    ,vb2.vehiclebodymake as md_vehiclebasic_trailer2vehiclebodymake\r\n",
					"    ,vb2.vehiclecolour as md_vehiclebasic_trailer2vehiclecolour\r\n",
					"    ,vb2.vehiclemake as md_vehiclebasic_trailer2vehiclemake\r\n",
					"    ,vb2.vehiclemodel as md_vehiclebasic_trailer2vehiclemodel\r\n",
					"    ,vb2.vehicleseries as md_vehiclebasic_trailer2vehicleseries\r\n",
					"    ,vb2.year as md_vehiclebasic_trailer2year\r\n",
					"    ,vb2.vehicleownerid as md_vehiclebasic_trailer2vehicleownerid\r\n",
					"    ,vb2.vehicleowner as md_vehiclebasic_trailer2vehicleowner\r\n",
					"    ,vb2.staffvehicleflag as md_vehiclebasic_trailer2staffvehicleflag\r\n",
					"    ,vb2.vehicletrailersize as md_vehiclebasic_trailer2vehicletrailersize\r\n",
					"    ,vb2.vehicletrailertype as md_vehiclebasic_trailer2vehicletrailertype\r\n",
					"    ,vb2.vehicleetollclass as md_vehiclebasic_trailer2vehicleetollclass\r\n",
					"    ,vb2.brn as md_vehiclebasic_trailer2brn\r\n",
					"    ,vb2.brnnumber as md_vehiclebasic_trailer2brnnumber\r\n",
					"    ,vb2.vehicleregisterno as md_vehiclebasic_trailer2vehicleregisterno\r\n",
					"    ,vb2.insdate as md_vehiclebasic_trailer2insdate\r\n",
					"    ,vb2.insby as md_vehiclebasic_trailer2insby\r\n",
					"    ,vb2.islinehaulvehicle as md_vehiclebasic_trailer2islinehaulvehicle\r\n",
					"    ,vb2.internalheight as md_vehiclebasic_trailer2internalheight\r\n",
					"    ,vb2.internallength as md_vehiclebasic_trailer2internallength\r\n",
					"    ,vb2.internalvolume as md_vehiclebasic_trailer2internalvolume\r\n",
					"    ,vb2.internalwidth as md_vehiclebasic_trailer2internalwidth\r\n",
					"    ,vb2.moddate as md_vehiclebasic_trailer2moddate\r\n",
					"    ,vb2.trailerflag as md_vehiclebasic_trailer2trailerflag\r\n",
					"    ,vb2.workflowstatus as md_vehiclebasic_trailer2workflowstatus\r\n",
					"    ,vb2.approveddate as md_vehiclebasic_trailer2approveddate\r\n",
					"\r\n",
					"FROM dboloads l\r\n",
					"LEFT JOIN sstparcelbyload pbl on pbl.lms_parcelbyload_loadid = l.id\r\n",
					"LEFT JOIN dbosroute sr on sr.id = l.routeid\r\n",
					"LEFT JOIN dbodriver d on d.id = l.driverid\r\n",
					"LEFT JOIN dbovehicle v on v.id = l.vehicleid\r\n",
					"LEFT JOIN dbovehicle v1 on v1.id = l.trailer1\r\n",
					"LEFT JOIN dbovehicle v2 on v2.id = l.trailer2\r\n",
					"LEFT JOIN dbovehiclebasic vb on vb.uid = v.uid\r\n",
					"LEFT JOIN dbovehiclebasic vb1 on vb1.uid = v1.uid\r\n",
					"LEFT JOIN dbovehiclebasic vb2 on vb2.uid = v2.uid\r\n",
					"LEFT JOIN dbousers u on u.id = l.userid\r\n",
					"LEFT JOIN dbousers u2 on u2.id = l.reopeneduserid\r\n",
					"\r\n",
					""
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sstloadchild = spark.sql(\"SELECT * FROM sstloadchild\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# sstloadchild.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Semi Structured Data/OPS/sstloadchild.parquet', mode = \"overwrite\")"
				],
				"execution_count": 11
			}
		]
	}
}