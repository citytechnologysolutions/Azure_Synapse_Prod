{
	"name": "3- Finance_SAP_Budget_DEV",
	"properties": {
		"folder": {
			"name": "ARCHIVE/DEV/Archived/Transactions Notebooks DEV"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d38831dd-d2b9-434b-91b6-fee86872794b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#dboOBGS = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOBGS.parquet', format='parquet')\r\n",
					"#dboOBGS.createOrReplaceTempView(\"dboOBGS\")\r\n",
					"\r\n",
					"#dboOBGT = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOBGT.parquet', format='parquet')\r\n",
					"#dboOBGT.createOrReplaceTempView(\"dboOBGT\")\r\n",
					"\r\n",
					"#dboBGT1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboBGT1.parquet', format='parquet')\r\n",
					"#dboBGT1.createOrReplaceTempView(\"dboBGT1\")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"F_OBGS = spark.sql(\"\"\"\r\n",
					"SELECT AbsId,\r\n",
					"    Name,\r\n",
					"    \"City Logistics New\" as Company\r\n",
					"FROM dboOBGS\r\n",
					"\"\"\")\r\n",
					"#F_OBGS.show()\r\n",
					"F_OBGS.createOrReplaceTempView(\"F_OBGS\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"F_OBGT = spark.sql(\"\"\"\r\n",
					"SELECT AcctCode,\r\n",
					"\t CredSTotal,\r\n",
					"\t DebSTotal,\r\n",
					"\t FinancYear,\r\n",
					"\t Instance as AbsId,\r\n",
					"\t AbsId as BudgId,\r\n",
					"\t \"City Logistics New\" as Company\r\n",
					"FROM dboOBGT\r\n",
					"\"\"\")\r\n",
					"#F_OBGT.show()\r\n",
					"F_OBGT.createOrReplaceTempView(\"F_OBGT\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"F_BGT1 = spark.sql(\"\"\"\r\n",
					"SELECT AcctCode,\r\n",
					"    CredSTotal as `Monthly_CredSTotal`,\r\n",
					"    DebSTotal as `Monthly_DebSTotal`,\r\n",
					"    BudgId,\r\n",
					"    Line_ID as FinMonth,\r\n",
					"    --LineMemo,\r\n",
					"    MonthPrcnt,\r\n",
					"    UserSign,\r\n",
					"    \"City Logistics New\" as Company\r\n",
					"FROM dboBGT1\r\n",
					"\"\"\")\r\n",
					"#F_BGT1.show()\r\n",
					"F_BGT1.createOrReplaceTempView(\"F_BGT1\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"F_Budget = spark.sql(\"\"\"\r\n",
					"SELECT obgs.AbsId,\r\n",
					"       obgs.Name,\r\n",
					"       obgs.Company,\r\n",
					"       obgt.AcctCode,\r\n",
					"\t   obgt.CredSTotal,\r\n",
					"\t   obgt.DebSTotal,\r\n",
					"\t   obgt.FinancYear,\r\n",
					"\t   --obgt.AbsId,\r\n",
					"\t   obgt.BudgId,\r\n",
					"       --bgt1.AcctCode,\r\n",
					"       bgt1.Monthly_CredSTotal,\r\n",
					"       bgt1.Monthly_DebSTotal,\r\n",
					"       --bgt1.BudgId,\r\n",
					"       bgt1.FinMonth,\r\n",
					"       --bgt1.LineMemo,\r\n",
					"       bgt1.MonthPrcnt,\r\n",
					"       bgt1.UserSign\r\n",
					"FROM F_OBGS obgs\r\n",
					"LEFT JOIN F_OBGT obgt \r\n",
					"       ON obgs.AbsId = obgt.AbsId\r\n",
					"LEFT JOIN F_BGT1 bgt1\r\n",
					"       ON obgt.AcctCode = bgt1.AcctCode\r\n",
					"\"\"\")\r\n",
					"#F_Budget.show()\r\n",
					"F_Budget.createOrReplaceTempView(\"F_Budget\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"F_OBGS.write.parquet('/DataLake/Structured/Facts/F_OBGS.parquet', mode='overwrite')\r\n",
					"F_OBGS.write.mode(\"overwrite\").saveAsTable(\"mdw_uat_Transactions.F_OBGS\")\r\n",
					"\r\n",
					"F_OBGT.write.parquet('/DataLake/Structured/Facts/F_OBGT.parquet', mode='overwrite')\r\n",
					"F_OBGT.write.mode(\"overwrite\").saveAsTable(\"mdw_uat_Transactions.F_OBGT\")\r\n",
					"\r\n",
					"F_BGT1.write.parquet('/DataLake/Structured/Facts/F_BGT1.parquet', mode='overwrite')\r\n",
					"F_BGT1.write.mode(\"overwrite\").saveAsTable(\"mdw_uat_Transactions.F_BGT1\")\r\n",
					"\r\n",
					"F_Budget.write.parquet('/DataLake/Structured/Facts/F_Budget.parquet', mode='overwrite')\r\n",
					"F_Budget.write.mode(\"overwrite\").saveAsTable(\"mdw_uat_Transactions.F_Budget\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Scripts have successfully executed\")"
				],
				"execution_count": null
			}
		]
	}
}