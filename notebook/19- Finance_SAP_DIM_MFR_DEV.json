{
	"name": "19- Finance_SAP_DIM_MFR_DEV",
	"properties": {
		"folder": {
			"name": "ARCHIVE/DEV/Archived/Transactions Notebooks DEV"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2dd94da4-12e9-4826-a741-8e61df367346"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"VEHICLE_H = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/@VEHICLE_H.parquet', format='parquet')\r\n",
					"VEHICLE_H.createOrReplaceTempView(\"VEHICLE_H\")\r\n",
					"\r\n",
					"dboMFRHistoryDaily = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboMFRHistoryDaily.parquet', format='parquet')\r\n",
					"dboMFRHistoryDaily.createOrReplaceTempView(\"dboMFRHistoryDaily\")"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SAP_MFR = spark.sql(\"\"\" \r\n",
					"SELECT \r\n",
					"        LEFT(U_FLEET,1) AS MFRHorse\r\n",
					"        ,if(U_ACTIVE='I','In Service',\r\n",
					"         if(U_ACTIVE='R','Removed From Fleet',\r\n",
					"         if(U_ACTIVE='W','Parked Off - Workshop',\r\n",
					"         if(U_ACTIVE='D','Parked Off - Depot','NULL')))) AS MFRVehicleStatus\r\n",
					"         ,U_BRANCH as MFRBranch\r\n",
					"         ,U_MODEL as MFRModel\r\n",
					"         ,U_EQUIPMENT as MFREquipment\r\n",
					"         ,U_CHASSIS as MFRChassisNumber\r\n",
					"         ,U_COLOUR as MFRVehicleColour\r\n",
					"         ,U_ENGINE as MFREngineNumber\r\n",
					"         ,U_APPLICATION as MFRApplication\r\n",
					"         ,U_DIVISION as MFRDivision\r\n",
					"         ,U_TYRE_SIZE as MFRRecommendedTyreSize\r\n",
					"         ,U_TYRE_ALT_SIZE as MFRAlternativeTyreSize\r\n",
					"         ,U_DEPOTCODE as MFRDepotCode\r\n",
					"         ,U_LICENSE as MFRExpiryDateOnLicence\r\n",
					"         ,U_LICENSE_FEE as MFRLicenceFee\r\n",
					"         ,U_GVM as MFRGrossVehicleMass\r\n",
					"         ,U_TARE as MFRTareWeight\r\n",
					"         ,U_PAYLOAD as MFRPayload\r\n",
					"         ,U_PCARRIER as MFRPeopleCarrier\r\n",
					"         ,U_TYRE_NO as MFRTotalNoOfTyres\r\n",
					"         ,U_TYRES_STEERING as MFRNoOfSteeringAxleTyres\r\n",
					"         ,U_TYRES_REAR as MFRNoOfRearAxleTyres\r\n",
					"         ,U_EXT_LENGTH as `MFRExternalBodyLength_M`\r\n",
					"         ,U_FLEET as MFRFleetNo\r\n",
					"         ,U_EXT_WIDTH as `MFRExternalBodyWidth_M`\r\n",
					"         ,U_EXT_HEIGHT as `MFRExternalBodyHeight_M`\r\n",
					"         ,U_INT_LENGTH as `MFRInternalBodyLength_M`\r\n",
					"         ,U_INT_WIDTH as `MFRInternalBodyWidth_M`\r\n",
					"         ,U_INT_HEIGHT as `MFRInternalBodyHeight_M`\r\n",
					"         ,U_INT_VOLUME as MFRInternalVolumetricCapacity\r\n",
					"         ,U_BODY_MAKE as MFRMakeOfBody\r\n",
					"         ,U_ADVERTISING as MFRAvailbilityForAdvertising\r\n",
					"         ,U_CURRENT_AD as MFRAdvertisingOrSignwritingOn\r\n",
					"         ,U_FLEXIMOUNTS as MFRFrameworkInstalledForFlexiMount\r\n",
					"         ,U_CLASS as `MFRCcClass/TypeOfVehicle`\r\n",
					"         ,U_FUEL_TYPE as `MFRDiesel/Petrol`\r\n",
					"         ,U_FUEL_L as MFRTankCapacity\r\n",
					"         ,U_RANGE as MFRKMRangeOnFullTankFuel\r\n",
					"         ,U_TARGET_FUEL as MFRTargetConsumption\r\n",
					"         ,U_CONSUMPTION as `MFRKMs/Litre`\r\n",
					"         ,U_SPEEDGOVERNING as `MFREngineProtection/IdleRevs`\r\n",
					"         ,U_FINANCE as MFROriginalFinanceCompany\r\n",
					"         ,U_CONTRACT as MFRContractNumber\r\n",
					"         ,U_REG as MFRRegNo\r\n",
					"         ,U_CONTRACT_START as MFRContractStartDate\r\n",
					"         ,U_CONTRACT_END as MFRContractEndDate\r\n",
					"         ,U_FIRST_INSTALMENT as MFRFirstInstalmentDate\r\n",
					"         ,U_PREVIOUS_OWNERSHIP as MFRPreviousOwnershipOfVehicle\r\n",
					"         ,U_FLEET_HAUL_NO as MFRFleetHaulNumber\r\n",
					"         ,U_OLD_REG as MFROldRegNo\r\n",
					"         ,U_E_TOLL as MFRETollClass\r\n",
					"         ,U_STATUS as MFRAssetStatus\r\n",
					"         ,U_YEAR as MFRYearModel\r\n",
					"         ,U_MAKE as MFRMake\r\n",
					"         ,U_SERIES as MFRSeries\r\n",
					"         ,U_PT_NAME as MFRPTName\r\n",
					"         ,U_ASSET_NO as MFRAssetCode\r\n",
					"         ,U_VEHICLE_FINANCED as MFRVehicleFinanced\r\n",
					"         ,U_REG_CHANGED as MFRHasRegChanged\r\n",
					"         ,U_BACK_DOOR_WIDTH as MFRBackDoorWidth\r\n",
					"         ,U_BACK_DOOR_HEIGHT as MFRBackDoorHeight\r\n",
					"    FROM VEHICLE_H\r\n",
					"\"\"\")\r\n",
					"#SAP_MFR.show\r\n",
					"SAP_MFR.createOrReplaceTempView(\"SAP_MFR\")"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SAP_MFR_HISTORY = spark.sql(\"\"\" \r\n",
					"SELECT \r\n",
					"\t `FleetCode`\t\tas  MFRFleetNo,\r\n",
					"\t `Depot`\t\t\tas `MFRCurrentDepotCode`,\r\n",
					"\t `DailyDate`\t    as `MFRLocationDate`,\r\n",
					"\t `ChangeDate`\t\tas `MFRBelongsDateFrom`,\r\n",
					"\t `ChangeDateTo`\t\tas `MFRBelongsDateTo`\r\n",
					"FROM dboMFRHistoryDaily\r\n",
					"\"\"\")\r\n",
					"#SAP_MFR_HISTORY.show\r\n",
					"SAP_MFR_HISTORY.createOrReplaceTempView(\"SAP_MFR_HISTORY\")"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"HISTORY_JOIN = spark.sql(\"\"\"\r\n",
					"SELECT \r\n",
					"      concat(CAST(unix_timestamp(MFRLocationDate) / (24*60*60) + 25569 as int ), CAST(sm.MFRFleetNo as string)) AS MFRLocationKey,\r\n",
					"       MFRCurrentDepotCode,\r\n",
					"       MFRLocationDate,\r\n",
					"       MFRBelongsDateFrom,\r\n",
					"       MFRBelongsDateTo,\r\n",
					"       smh.*\r\n",
					"FROM SAP_MFR_HISTORY sm\r\n",
					"LEFT JOIN SAP_MFR smh \r\n",
					"ON sm.MFRFleetNo = smh.MFRFleetNo\r\n",
					"\"\"\")\r\n",
					"#HISTORY_JOIN.show()\r\n",
					"HISTORY_JOIN.createOrReplaceTempView(\"HISTORY_JOIN\")"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import functions as F"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"HISTORY_JOIN = HISTORY_JOIN.select([F.col(c).alias(\"H_\"+c) for c in HISTORY_JOIN.columns])\r\n",
					"HISTORY_JOIN.createOrReplaceTempView(\"HISTORY_JOIN\")"
				],
				"execution_count": 39
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT  `MFRLocationDate` as `Posting_Date`,\r\n",
					"        `U_DEPOTCODE` as `Depot_Code`,\r\n",
					"        Left(`U_FLEET`,1) as HorseFlag,\r\n",
					"        VEHICLES ||`U_APPLICATION`||'|'||'ACTIVITY'||'|'||\r\n",
					"        if(`U_DEPOTCODE`='CLE','CONTAINER',\r\n",
					"            if(`U_DEPOTCODE`='CLI','CONTAINER',\r\n",
					"                if(`U_DEPOTCODE`='CLL','CONTAINER',\r\n",
					"                    if(`U_DEPOTCODE`='CLR','RETAIL',\r\n",
					"                        if(`U_DEPOTCODE`='P||G','RETAIL',\r\n",
					"                            if(`U_DEPOTCODE`='SAB','SAB',`U_DEPOTCODE`)))))) as `System_Account_Code_KEY`,\r\n",
					"        `U_FLEET` as `Fleet_Code`,\r\n",
					"        Activity as `Document_Category`,        \r\n",
					"        1 as `Line_Total`,\r\n",
					"        Actual `Type`          \r\n",
					"FROM HISTORY_JOIN\r\n",
					"WHERE U_DEPOTCODE IN ('CLE','CLI','CLL','CLR','P||G','SAB') \r\n",
					"AND Left(`U_FLEET`,1)='H'\r\n",
					"AND U_ACTIVE<>'R'"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"HISTORY_JOIN.write.parquet('/DataLake/Structured/Facts/F_MFRHISTORY.parquet', mode='overwrite')\r\n",
					"HISTORY_JOIN.write.mode(\"overwrite\").saveAsTable(\"mdw_uat_Transactions.F_MFRHISTORY\")\r\n",
					"\r\n",
					"SAP_MFR.write.parquet('/DataLake/Structured/Dimensions/DIM_MFR.parquet', mode='overwrite')\r\n",
					"SAP_MFR.write.mode(\"overwrite\").saveAsTable(\"mdw_uat_Transactions.DIM_MFR\")"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Scripts have successfully executed\")"
				],
				"execution_count": null
			}
		]
	}
}