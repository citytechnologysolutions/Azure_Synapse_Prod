{
	"name": "17- Operations_LMS_OnRouteDet_3MRolling_MFR_DEV",
	"properties": {
		"folder": {
			"name": "ARCHIVE/DEV/Archived/Operations Notebooks DEV"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "16d34b2f-a1d5-411d-9b3c-78748976c385"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#VEHICLE_H = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/@VEHICLE_H.parquet', format='parquet')\r\n",
					"#VEHICLE_H.createOrReplaceTempView(\"VEHICLE_H\")\r\n",
					"\r\n",
					"#dboMFRHistoryDaily = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboMFRHistoryDaily.parquet', format='parquet')\r\n",
					"#dboMFRHistoryDaily.createOrReplaceTempView(\"dboMFRHistoryDaily\")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SAP_MFR = spark.sql(\"\"\" \r\n",
					"SELECT *\r\n",
					"FROM VEHICLE_H\r\n",
					"\"\"\")\r\n",
					"#SAP_MFR.show\r\n",
					"SAP_MFR.createOrReplaceTempView(\"SAP_MFR\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SAP_MFR_HISTORY = spark.sql(\"\"\" \r\n",
					"SELECT `FleetCode`\t\tas U_FLEET,\r\n",
					"\t `Depot`\t\t\tas `MFRCurrentDepotCode`,\r\n",
					"\t `DailyDate`\t    as `MFRLocationDate`,\r\n",
					"\t `ChangeDate`\t\tas `MFRBelongsDateFrom`,\r\n",
					"\t `ChangeDateTo`\t\tas `MFRBelongsDateTo`\r\n",
					"FROM dboMFRHistoryDaily\r\n",
					"\"\"\")\r\n",
					"#SAP_MFR_HISTORY.show\r\n",
					"SAP_MFR_HISTORY.createOrReplaceTempView(\"SAP_MFR_HISTORY\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"HISTORY_JOIN = spark.sql(\"\"\"\r\n",
					"SELECT sm.*,\r\n",
					"       MFRCurrentDepotCode,\r\n",
					"       MFRLocationDate,\r\n",
					"       MFRBelongsDateFrom,\r\n",
					"       MFRBelongsDateTo\r\n",
					"FROM SAP_MFR sm \r\n",
					"LEFT JOIN SAP_MFR_HISTORY smh \r\n",
					"ON sm.U_FLEET = smh.U_FLEET\r\n",
					"ORDER BY Code, MFRLocationDate\r\n",
					"\"\"\")\r\n",
					"#HISTORY_JOIN.show()\r\n",
					"HISTORY_JOIN.createOrReplaceTempView(\"HISTORY_JOIN\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"MFRVEHCLE = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT DISTINCT U_FLEET AS LD_FleetNo,\r\n",
					"U_BRANCH AS MF_BRANCH,\r\n",
					"U_MODEL AS MF_MODEL,\r\n",
					"U_CHASSIS AS MF_CHASSIS,\r\n",
					"U_COLOUR AS MF_COLOUR,\r\n",
					"U_ENGINE AS MF_ENGINE,\r\n",
					"U_RADIO AS MF_RADIO,\r\n",
					"U_TYRE_SIZE AS MF_TYRE_SIZE,\r\n",
					"U_TYRE_ALT_SIZE AS MF_TYRE_ALT_SIZE,\r\n",
					"U_DEPOTCODE AS MF_DEPOTCODE,\r\n",
					"U_LICENSE AS MF_LICENSE,\r\n",
					"U_LICENSE_FEE AS MF_LICENSE_FEE,\r\n",
					"U_GVM AS MF_GVM,\r\n",
					"U_TARE AS MF_TARE,\r\n",
					"U_PAYLOAD AS MF_PAYLOAD,\r\n",
					"U_PCARRIER AS MF_PCARRIER,\r\n",
					"U_TYRE_NO AS MF_TYRE_NO,\r\n",
					"U_TYRES_STEERING AS MF_TYRES_STEERING,\r\n",
					"U_TYRES_REAR AS MF_TYRES_REAR,\r\n",
					"U_EXT_LENGTH AS MF_EXT_LENGTH,\r\n",
					"U_EXT_WIDTH AS MF_EXT_WIDTH,\r\n",
					"U_EXT_HEIGHT AS MF_EXT_HEIGHT,\r\n",
					"U_INT_LENGTH AS MF_INT_LENGTH,\r\n",
					"U_INT_WIDTH AS MF_INT_WIDTH,\r\n",
					"U_INT_HEIGHT AS MF_INT_HEIGHT,\r\n",
					"U_INT_VOLUME AS MF_INT_VOLUME,\r\n",
					"U_BODY_MAKE AS MF_BODY_MAKE,\r\n",
					"U_CLASS AS MF_CLASS,\r\n",
					"U_FUEL_TYPE AS MF_FUEL_TYPE,\r\n",
					"U_RANGE AS MF_RANGE,\r\n",
					"U_CONSUMPTION AS MF_CONSUMPTION,\r\n",
					"U_CARD AS MF_CARD,\r\n",
					"U_CARDDATE AS MF_CARDDATE,\r\n",
					"U_SPEEDGOVERNING AS MF_SPEEDGOVERNING,\r\n",
					"U_REG AS MF_REG,\r\n",
					"U_E_TOLL AS MF_E_TOLL,\r\n",
					"U_STATUS AS MF_STATUS,\r\n",
					"U_YEAR AS MF_YEAR,\r\n",
					"U_MAKE AS MF_MAKE,\r\n",
					"U_SERIES AS MF_SERIES,\r\n",
					"U_ASSET_NO AS MF_ASSET_NO,\r\n",
					"U_VEHICLE_FINANCED AS MF_VEHICLE_FINANCED,\r\n",
					"U_ACTIVE AS MF_ACTIVE,\r\n",
					"U_BACK_DOOR_WIDTH AS MF_BACK_DOOR_WIDTH,\r\n",
					"U_BACK_DOOR_HEIGHT AS MF_BACK_DOOR_HEIGHT,\r\n",
					"U_OWNER AS MF_OWNER\r\n",
					"FROM HISTORY_JOIN\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#MFRVEHCLE.show()\r\n",
					"MFRVEHCLE.createOrReplaceTempView(\"MFRVEHCLE\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"Dim_Vechile = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT DISTINCT LD_FleetNo AS V_FleetNo,\r\n",
					"                MF_BRANCH AS V_BRANCH,\r\n",
					"                MF_MODEL AS V_MODEL,\r\n",
					"                MF_CHASSIS AS V_CHASSIS,\r\n",
					"                MF_COLOUR AS V_COLOUR,\r\n",
					"                MF_ENGINE AS V_ENGINE,\r\n",
					"                MF_RADIO AS V_RADIO,\r\n",
					"                MF_TYRE_SIZE AS V_TYRE_SIZE,\r\n",
					"                MF_TYRE_ALT_SIZE AS V_TYRE_ALT_SIZE,\r\n",
					"                MF_DEPOTCODE AS V_DEPOTCODE,\r\n",
					"                MF_LICENSE AS V_LICENSE,\r\n",
					"                MF_LICENSE_FEE AS V_LICENSE_FEE,\r\n",
					"                MF_GVM AS V_GVM,\r\n",
					"                MF_TARE AS V_TARE,\r\n",
					"                MF_PAYLOAD AS V_PAYLOAD,\r\n",
					"                MF_PCARRIER AS V_PCARRIER,\r\n",
					"                MF_TYRE_NO AS V_TYRE_NO,\r\n",
					"                MF_TYRES_STEERING AS V_TYRES_STEERING,\r\n",
					"                MF_TYRES_REAR AS V_TYRES_REAR,\r\n",
					"                MF_EXT_LENGTH AS V_EXT_LENGTH,\r\n",
					"                MF_EXT_WIDTH AS V_EXT_WIDTH,\r\n",
					"                MF_EXT_HEIGHT AS V_EXT_HEIGHT,\r\n",
					"                MF_INT_LENGTH AS V_INT_LENGTH,\r\n",
					"                MF_INT_WIDTH AS V_INT_WIDTH,\r\n",
					"                MF_INT_HEIGHT AS V_INT_HEIGHT,\r\n",
					"                MF_INT_VOLUME AS V_INT_VOLUME,\r\n",
					"                MF_BODY_MAKE AS V_BODY_MAKE,\r\n",
					"                MF_CLASS AS V_CLASS,\r\n",
					"                MF_FUEL_TYPE AS V_FUEL_TYPE,\r\n",
					"                MF_RANGE AS V_RANGE,\r\n",
					"                MF_CONSUMPTION AS V_CONSUMPTION,\r\n",
					"                MF_CARD AS V_CARD,\r\n",
					"                MF_CARDDATE AS V_CARDDATE,\r\n",
					"                MF_SPEEDGOVERNING AS V_SPEEDGOVERNING,\r\n",
					"                MF_REG AS V_REG,\r\n",
					"                MF_E_TOLL AS V_E_TOLL,\r\n",
					"                MF_STATUS AS V_STATUS,\r\n",
					"                MF_YEAR AS V_YEAR,\r\n",
					"                MF_MAKE AS V_MAKE,\r\n",
					"                MF_SERIES AS V_SERIES,\r\n",
					"                MF_ASSET_NO AS V_ASSET_NO,\r\n",
					"                MF_VEHICLE_FINANCED AS V_VEHICLE_FINANCED,\r\n",
					"                MF_ACTIVE AS V_ACTIVE,\r\n",
					"                MF_BACK_DOOR_WIDTH AS V_BACK_DOOR_WIDTH,\r\n",
					"                MF_BACK_DOOR_HEIGHT AS V_BACK_DOOR_HEIGHT,\r\n",
					"                MF_OWNER AS V_OWNER\r\n",
					"FROM MFRVEHCLE\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#Dim_Vechile.show()\r\n",
					"Dim_Vechile.createOrReplaceTempView(\"Dim_Vechile\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Dim_Vechile.write.parquet('/DataLake/Structured/Dimensions/Dim_Vechile.parquet', mode='overwrite')"
				],
				"execution_count": 7
			}
		]
	}
}