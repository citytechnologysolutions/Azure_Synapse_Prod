{
	"name": "SSTWaybill",
	"properties": {
		"folder": {
			"name": "TRANSFORM/01 SEMI-STRUCTURED/LMS + ORV"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "TESTSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c466b3d5-a80f-452c-9fb8-79089919e8a2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse_Prod/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace-prod/bigDataPools/TESTSparkPool",
				"name": "TESTSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace-prod.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/TESTSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"#Create DataFrame for the dbowaybill LMS Table\r\n",
					"dbowaybill = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbowaybill.parquet', format='parquet')\r\n",
					"dbowaybill.createOrReplaceTempView(\"dbowaybill\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbocustomer LMS Table\r\n",
					"dbocustomer = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbocustomer.parquet', format='parquet')\r\n",
					"dbocustomer.createOrReplaceTempView(\"dbocustomer\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbousers LMS Table\r\n",
					"dbousers = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbousers.parquet', format='parquet')\r\n",
					"dbousers.createOrReplaceTempView(\"dbousers\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbodb_delayreason LMS Table\r\n",
					"dbodb_delayreason = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbodb_delayreason.parquet', format='parquet')\r\n",
					"dbodb_delayreason.createOrReplaceTempView(\"dbodb_delayreason\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbodb_reasondetail LMS Table\r\n",
					"dbodb_reasondetail = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbodb_reasondetail.parquet', format='parquet')\r\n",
					"dbodb_reasondetail.createOrReplaceTempView(\"dbodb_reasondetail\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbodb_reasongroup LMS Table\r\n",
					"dbodb_reasongroup = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbodb_reasongroup.parquet', format='parquet')\r\n",
					"dbodb_reasongroup.createOrReplaceTempView(\"dbodb_reasongroup\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbodb_deliverystatus LMS Table\r\n",
					"dbodb_deliverystatus = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbodb_deliverystatus.parquet', format='parquet')\r\n",
					"dbodb_deliverystatus.createOrReplaceTempView(\"dbodb_deliverystatus\")\r\n",
					"\r\n",
					"#Create DataFrame for the dbodb_mobilefeedbackreason LMS Table\r\n",
					"dbodb_mobilefeedbackreason = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/LMS/dbodb_mobilefeedbackreason.parquet', format='parquet')\r\n",
					"dbodb_mobilefeedbackreason.createOrReplaceTempView(\"dbodb_mobilefeedbackreason\")\r\n",
					"\r\n",
					"#Create DataFrame for the publicdelivery ORV Table\r\n",
					"publicdelivery = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/Onroute/publicdelivery.parquet', format='parquet')\r\n",
					"publicdelivery.createOrReplaceTempView(\"publicdelivery\")\r\n",
					"\r\n",
					"#Create DataFrame for the publicmall ORV Table\r\n",
					"publicmall = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/Onroute/publicmall.parquet', format='parquet')\r\n",
					"publicmall.createOrReplaceTempView(\"publicmall\")\r\n",
					"\r\n",
					"#Create DataFrame for the publiccustomer ORV Table\r\n",
					"publiccustomer = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Unstructured Data/Onroute/publiccustomer.parquet', format='parquet')\r\n",
					"publiccustomer.createOrReplaceTempView(\"publiccustomer\")\r\n",
					"\r\n",
					"#Create DataFrame for the sstparcelbywaybill LMS Table\r\n",
					"sstparcelbywaybill = spark.read.load('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Semi Structured Data/OPS/sstparcelbywaybill.parquet', format='parquet')\r\n",
					"sstparcelbywaybill.createOrReplaceTempView(\"sstparcelbywaybill\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"\r\n",
					"sstwaybill = spark.sql(\"\"\"\r\n",
					"SELECT \r\n",
					"\r\n",
					"    w.id as lms_waybill_id\r\n",
					"    ,w.date as lms_waybill_date\r\n",
					"    ,w.bservice as lms_waybill_bservice\r\n",
					"    ,w.cservice as lms_waybill_cservice\r\n",
					"    ,w.originid as lms_waybill_originid\r\n",
					"    ,w.defuser as lms_waybill_defuser\r\n",
					"    ,w.distance as lms_waybill_distance\r\n",
					"    ,w.courierid as lms_waybill_courierid\r\n",
					"    ,w.courierwbno as lms_waybill_courierwbno\r\n",
					"    ,w.billtype as lms_waybill_billtype\r\n",
					"    ,w.capdate as lms_waybill_capdate\r\n",
					"    ,w.surcharge as lms_waybill_surcharge\r\n",
					"    ,w.insurance as lms_waybill_insurance\r\n",
					"    ,w.tax as lms_waybill_tax\r\n",
					"    ,w.totalcharge as lms_waybill_totalcharge\r\n",
					"    ,w.destinationname as lms_waybill_destinationname\r\n",
					"    ,w.ordertype as lms_waybill_ordertype\r\n",
					"    ,w.pickupcustid as lms_waybill_pickupcustid\r\n",
					"    ,w.delivercustid as lms_waybill_delivercustid\r\n",
					"    ,w.billto as lms_waybill_billto\r\n",
					"    ,w.claimable as lms_waybill_claimable\r\n",
					"    ,w.override as lms_waybill_override\r\n",
					"    ,w.vehiclecapacity as lms_waybill_vehiclecapacity\r\n",
					"    ,w.custpoddate as lms_waybill_custpoddate\r\n",
					"    ,w.poddate as lms_waybill_poddate\r\n",
					"    ,w.signee as lms_waybill_signee\r\n",
					"    ,w.grvno as lms_waybill_grvno\r\n",
					"    ,w.endorsements as lms_waybill_endorsements\r\n",
					"    ,w.billcust as lms_waybill_billcust\r\n",
					"    ,w.courier_from as lms_waybill_courier_from\r\n",
					"    ,w.courier_to as lms_waybill_courier_to\r\n",
					"    ,w.charge as lms_waybill_charge\r\n",
					"    ,w.tvalue as lms_waybill_tvalue\r\n",
					"    ,w.inservice as lms_waybill_inservice\r\n",
					"    ,w.dbtotalcharge as lms_waybill_dbtotalcharge\r\n",
					"    ,w.loadid as lms_waybill_loadid\r\n",
					"    ,w.mrpflag as lms_waybill_mrpflag\r\n",
					"    ,w.printed as lms_waybill_printed\r\n",
					"    ,w.sreasonid as lms_waybill_sreasonid\r\n",
					"    ,w.minkg as lms_waybill_minkg\r\n",
					"    ,w.minrate as lms_waybill_minrate\r\n",
					"    ,w.addrate as lms_waybill_addrate\r\n",
					"    ,w.docfees as lms_waybill_docfees\r\n",
					"    ,w.volumetric as lms_waybill_volumetric\r\n",
					"    ,w.hasprinted as lms_waybill_hasprinted\r\n",
					"    ,w.site as lms_waybill_site\r\n",
					"    ,w.deliveryno as lms_waybill_deliveryno\r\n",
					"    ,w.fuellevy as lms_waybill_fuellevy\r\n",
					"    ,w.totfuellevy as lms_waybill_totfuellevy\r\n",
					"    ,w.custaccid as lms_waybill_custaccid\r\n",
					"    ,w.podadded as lms_waybill_podadded\r\n",
					"    ,w.scanned as lms_waybill_scanned\r\n",
					"    ,w.userid as lms_waybill_userid\r\n",
					"    ,w.autoprinted as lms_waybill_autoprinted\r\n",
					"    ,w.poduserid as lms_waybill_poduserid\r\n",
					"    ,w.scanuserid as lms_waybill_scanuserid\r\n",
					"    ,w.cref as lms_waybill_cref\r\n",
					"    ,w.ushort as lms_waybill_ushort\r\n",
					"    ,w.delays as lms_waybill_delays\r\n",
					"    ,w.debriefed as lms_waybill_debriefed\r\n",
					"    ,w.debriefdt as lms_waybill_debriefdt\r\n",
					"    ,w.dbctnsret as lms_waybill_dbctnsret\r\n",
					"    ,w.uploaded as lms_waybill_uploaded\r\n",
					"    ,w.serviceexclude as lms_waybill_serviceexclude\r\n",
					"    ,w.failed as lms_waybill_failed\r\n",
					"    ,w.delayreasonid as lms_waybill_delayreasonid\r\n",
					"    ,w.notdebrievreasonid as lms_waybill_notdebrievreasonid\r\n",
					"    ,w.deliverystatid as lms_waybill_deliverystatid\r\n",
					"    ,w.reasongroupid as lms_waybill_reasongroupid\r\n",
					"    ,w.emailcust as lms_waybill_emailcust\r\n",
					"    ,w.mobileissuereportedid as lms_waybill_mobileissuereportedid\r\n",
					"    ,w.ismobile as lms_waybill_ismobile\r\n",
					"    ,bc.id as lms_bcustomer_id\r\n",
					"    ,bc.name as lms_bcustomer_name\r\n",
					"    ,pc.id as lms_pcustomer_id\r\n",
					"    ,pc.name as lms_pcustomer_name\r\n",
					"    ,dc.id as lms_dcustomer_id\r\n",
					"    ,dc.name as lms_dcustomer_name\r\n",
					"    ,u.id as lms_users_id\r\n",
					"    ,u.fullname as lms_users_fullname\r\n",
					"    ,u.site as lms_users_site\r\n",
					"    ,pu.id as lms_podusers_id\r\n",
					"    ,pu.fullname as lms_podusers_fullname\r\n",
					"    ,pu.site as lms_podusers_site\r\n",
					"    ,su.id as lms_scanusers_id\r\n",
					"    ,su.fullname as lms_scanusers_fullname\r\n",
					"    ,su.site as lms_scanusers_site\r\n",
					"    ,dr.id as lms_delayreason_id\r\n",
					"    ,dr.description as lms_delayreason_description\r\n",
					"    ,mfr.id as lms_mobilefeedbackreason_id\r\n",
					"    ,mfr.description as lms_mobilefeedbackreason_description\r\n",
					"    ,rd.id as lms_reasondetail_id\r\n",
					"    ,rd.description as lms_reasondetail_description\r\n",
					"    ,rd.db_reasongroupid as lms_reasondetail_reasongroupid\r\n",
					"    ,rg.id as lms_reasongroup_id\r\n",
					"    ,rg.description as lms_reasongroup_description\r\n",
					"    ,ds.id as lms_deliverystatus_id\r\n",
					"    ,ds.description as lms_deliverystatus_description\r\n",
					"    ,pbw.lms_parcelbywaybill_waybillid as lms_parcelbywaybill_waybillid\r\n",
					"    ,pbw.lms_parcelbywaybill_aggweight as lms_parcelbywaybill_aggweight\r\n",
					"    ,pbw.lms_parcelbywaybill_aggchargeweight as lms_parcelbywaybill_aggchargeweight\r\n",
					"    ,pbw.lms_parcelbywaybill_aggvolweight as lms_parcelbywaybill_aggvolweight\r\n",
					"    ,pbw.lms_parcelbywaybill_aggvolumiserweight as lms_parcelbywaybill_aggvolumiserweight\r\n",
					"    ,pbw.lms_parcelbywaybill_noparcels as lms_parcelbywaybill_noparcels\r\n",
					"    ,d.id as orv_delivery_id\r\n",
					"    ,d.did as orv_delivery_dispatchid\r\n",
					"    ,d.waybillid as orv_delivery_waybillid\r\n",
					"    ,d.address as orv_delivery_address\r\n",
					"    ,d.town as orv_delivery_town\r\n",
					"    ,d.province as orv_delivery_province\r\n",
					"    ,d.country as orv_delivery_country\r\n",
					"    ,d.lat as orv_delivery_lat\r\n",
					"    ,d.lng as orv_delivery_lng\r\n",
					"    ,d.placeid as orv_delivery_placeid\r\n",
					"    ,d.what3words as orv_delivery_what3words\r\n",
					"    ,d.zipcode as orv_delivery_zipcode\r\n",
					"    ,to_timestamp(d.eta) as orv_delivery_eta\r\n",
					"    ,to_timestamp(d.actualeta) as orv_delivery_actualeta\r\n",
					"    ,to_timestamp(d.deliverydate) as orv_delivery_deliverydate\r\n",
					"    ,to_timestamp(d.deliverby) as orv_delivery_deliverby\r\n",
					"    ,d.deliveryorder as orv_delivery_deliveryorder\r\n",
					"    ,to_timestamp(d.tsgeofenceenter) as orv_delivery_tsgeofenceenter\r\n",
					"    ,to_timestamp(d.tsscanningstart) as orv_delivery_tsscanningstart\r\n",
					"    ,to_timestamp(d.tsscanningstop) as orv_delivery_tsscanningstop\r\n",
					"    ,to_timestamp(d.tspodsignature) as orv_delivery_tspodsignature\r\n",
					"    ,d.aid as orv_delivery_aid\r\n",
					"    ,d.numprcls as orv_delivery_numprcls\r\n",
					"    ,d.geocodingstatus as orv_delivery_geocodingstatus\r\n",
					"    ,to_timestamp(d.skipdate) as orv_delivery_skipdate\r\n",
					"    ,d.skipreason as orv_delivery_skipreason\r\n",
					"    ,d.status as orv_delivery_status\r\n",
					"    ,d.partialmatch as orv_delivery_partialmatch\r\n",
					"    ,d.approximated as orv_delivery_approximated\r\n",
					"    ,d.lmsorder as orv_delivery_lmsorder\r\n",
					"    ,d.optimizedorder as orv_delivery_optimizedorder\r\n",
					"    ,d.seal as orv_delivery_seal\r\n",
					"    ,d.customerinvoice as orv_delivery_customerinvoice\r\n",
					"    ,d.customerdn as orv_delivery_customerdn\r\n",
					"    ,d.grv as orv_delivery_grv\r\n",
					"    ,d.chepslip as orv_delivery_chepslip\r\n",
					"    ,d.cleandelivery as orv_delivery_cleandelivery\r\n",
					"    ,d.trackingcode as orv_delivery_trackingcode\r\n",
					"    ,d.mode as orv_delivery_mode\r\n",
					"    ,d.customorder as orv_delivery_customorder\r\n",
					"    ,d.verified as orv_delivery_verified\r\n",
					"    ,d.altered as orv_delivery_altered\r\n",
					"    ,d.orderid as orv_delivery_orderid\r\n",
					"    ,d.mergeid as orv_delivery_mergeid\r\n",
					"    ,d.orderref as orv_delivery_orderref\r\n",
					"    ,d.drivernote as orv_delivery_drivernote\r\n",
					"    ,d.timedefinite as orv_delivery_timedefinite\r\n",
					"    ,d.orvcode as orv_delivery_orvcode\r\n",
					"    ,d.vaid as orv_delivery_vaid\r\n",
					"    ,to_timestamp(d.delegatedate) as orv_delivery_delegatedate\r\n",
					"    ,d.delegatemode as orv_delivery_delegatemode\r\n",
					"    ,d.debriefmode as orv_delivery_debriefmode\r\n",
					"    ,d.debriefed as orv_delivery_debriefed\r\n",
					"    ,to_timestamp(d.insdate) as orv_delivery_insdate\r\n",
					"    ,d.reviseddebrief as orv_delivery_reviseddebrief\r\n",
					"    ,d.lmsdebriefed as orv_delivery_lmsdebriefed\r\n",
					"    ,to_timestamp(d.uncanceldate) as orv_delivery_uncanceldate\r\n",
					"    ,to_timestamp(d.podlaterdate) as orv_delivery_podlaterdate\r\n",
					"    ,to_timestamp(d.podmanualdate) as orv_delivery_podmanualdate\r\n",
					"    ,d.manualdebriefreason as orv_delivery_manualdebriefreason\r\n",
					"    ,d.submanualdebriefreason as orv_delivery_submanualdebriefreason\r\n",
					"    ,d.outofgeofencereason as orv_delivery_outofgeofencereason\r\n",
					"    ,to_timestamp(d.tsentergeofenceapp) as orv_delivery_tsentergeofenceapp\r\n",
					"    ,to_timestamp(d.tsexitgeofenceapp) as orv_delivery_tsexitgeofenceapp\r\n",
					"    ,d.comebacklater as orv_delivery_comebacklater\r\n",
					"    ,d.uncancelusername as orv_delivery_uncancelusername\r\n",
					"    ,d.cref as orv_delivery_cref\r\n",
					"    ,d.division as orv_delivery_division\r\n",
					"    ,d.descriptionofgoods as orv_delivery_descriptionofgoods\r\n",
					"    ,d.skiplng as orv_delivery_skiplng\r\n",
					"    ,d.skiplat as orv_delivery_skiplat\r\n",
					"    ,d.courierid as orv_delivery_courierid\r\n",
					"    ,d.posreason as orv_delivery_posreason\r\n",
					"    ,to_timestamp(d.moddate) as orv_delivery_moddate\r\n",
					"    ,d.mallid as orv_delivery_mallid\r\n",
					"    ,d.mallgid as orv_delivery_mallgid\r\n",
					"    ,d.lmsidskipreason as orv_delivery_lmsidskipreason\r\n",
					"    ,d.deleteforimport as orv_delivery_deleteforimport\r\n",
					"    ,d.podoutofgeofence as orv_delivery_podoutofgeofence\r\n",
					"    ,d.originalcustomerid as orv_delivery_originalcustomerid\r\n",
					"    ,c.id as orv_originalcustomer_id\r\n",
					"    ,c.name as orv_originalcustomer_name\r\n",
					"    ,m.id as orv_mall_id\r\n",
					"    ,m.mallname as orv_mall_mallname\r\n",
					"    ,m.branchname as orv_mall_branchname\r\n",
					"    ,m.gpretailer as orv_mall_gpretailer\r\n",
					"    ,m.highvoldelivery as orv_mall_highvoldelivery\r\n",
					"    ,m.stripmall as orv_mall_stripmall\r\n",
					"    ,m.standalonestore as orv_mall_standalonestore\r\n",
					"    ,m.streetsidestore as orv_mall_streetsidestore\r\n",
					"    ,m.dedicatedrouted as orv_mall_dedicatedrouted\r\n",
					"    ,to_timestamp(m.insdate) as orv_mall_insdate\r\n",
					"    ,m.address as orv_mall_address\r\n",
					"    ,m.deleted as orv_mall_deleted\r\n",
					"    ,m.lat as orv_mall_lat\r\n",
					"    ,m.lng as orv_mall_lng\r\n",
					"\r\n",
					"FROM dbowaybill w\r\n",
					"LEFT JOIN dbocustomer bc on bc.id = w.billcust\r\n",
					"LEFT JOIN dbocustomer pc on pc.id = w.pickupcustid\r\n",
					"LEFT JOIN dbocustomer dc on dc.id = w.delivercustid\r\n",
					"LEFT JOIN dbousers u on u.id = w.userid\r\n",
					"LEFT JOIN dbousers pu on pu.id = w.poduserid\r\n",
					"LEFT JOIN dbousers su on su.id = w.scanuserid\r\n",
					"LEFT JOIN dbodb_delayreason dr on dr.id = w.delayreasonid\r\n",
					"LEFT JOIN dbodb_reasondetail rd on rd.id = w.notdebrievreasonid\r\n",
					"LEFT JOIN dbodb_reasongroup rg on rg.id = w.reasongroupid\r\n",
					"LEFT JOIN dbodb_deliverystatus ds on ds.id = w.deliverystatid\r\n",
					"LEFT JOIN dbodb_mobilefeedbackreason mfr on mfr.id = w.mobileissuereportedid\r\n",
					"LEFT JOIN publicdelivery d on d.waybillid = w.id AND d.mode = 'deliver'\r\n",
					"LEFT JOIN publicmall m on m.id = d.mallid\r\n",
					"LEFT JOIN publiccustomer c on c.id = d.originalcustomerid\r\n",
					"LEFT JOIN sstparcelbywaybill pbw on pbw.lms_parcelbywaybill_waybillid = w.id\r\n",
					"\"\"\")\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sstwaybill.createOrReplaceTempView(\"sstwaybill\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sstwaybill.write.parquet('abfss://synapse@citylogisticsstorageprod.dfs.core.windows.net/Semi Structured Data/OPS/sstwaybill.parquet', mode = \"overwrite\")"
				],
				"execution_count": null
			}
		]
	}
}