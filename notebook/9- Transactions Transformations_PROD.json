{
	"name": "9- Transactions Transformations_PROD",
	"properties": {
		"folder": {
			"name": "ARCHIVE/PROD/Transactions Notebooks PROD"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "286fe80e-584c-46a6-bec2-ef92e2234ebc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Load Source Data from BlobStorage"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#dboOINM = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/OINM.parquet', format='parquet')\r\n",
					"#dboOINM.createOrReplaceTempView(\"dboOINM\")\r\n",
					"\r\n",
					"#MANUAL_JOURNAL_TMP = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/DataLake/Structured/Facts/F_MANUAL_JOURNAL_TMP.parquet', format='parquet')\r\n",
					"#MANUAL_JOURNAL_TMP.createOrReplaceTempView(\"MANUAL_JOURNAL_TMP\")\r\n",
					"\r\n",
					"#Sales_Invoice = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/DataLake/Structured/Facts/F_Sales_Invoice.parquet', format='parquet')\r\n",
					"#Sales_Invoice.createOrReplaceTempView(\"Sales_Invoice\")\r\n",
					"\r\n",
					"#Dim_Item = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net//DataLake/Structured/Dimensions/Dim_ITEM.parquet', format='parquet')\r\n",
					"#Dim_Item.createOrReplaceTempView(\"Dim_Item\")\r\n",
					"\r\n",
					"#dboOINV = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOINV.parquet', format='parquet')\r\n",
					"#dboOINV.createOrReplaceTempView(\"dboOINV\")\r\n",
					"\r\n",
					"#dboORIN = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboORIN.parquet', format='parquet')\r\n",
					"#dboORIN.createOrReplaceTempView(\"dboORIN\")\r\n",
					"\r\n",
					"#dboOPCH = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOPCH.parquet', format='parquet')\r\n",
					"#dboOPCH.createOrReplaceTempView(\"dboOPCH\")\r\n",
					"\r\n",
					"#dboORPC = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboORPC.parquet', format='parquet')\r\n",
					"#dboORPC.createOrReplaceTempView(\"dboORPC\")\r\n",
					"\r\n",
					"#dboOPDN = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOPDN.parquet', format='parquet')\r\n",
					"#dboOPDN.createOrReplaceTempView(\"dboOPDN\")\r\n",
					"\r\n",
					"#dboOIGE = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOIGE.parquet', format='parquet')\r\n",
					"#dboOIGE.createOrReplaceTempView(\"dboOIGE\")\r\n",
					"\r\n",
					"#dboOPDN = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOPDN.parquet', format='parquet')\r\n",
					"#dboOPDN.createOrReplaceTempView(\"dboOPDN\")\r\n",
					"\r\n",
					"#dboORPD = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboORPD.parquet', format='parquet')\r\n",
					"#dboORPD.createOrReplaceTempView(\"dboORPD\")\r\n",
					"\r\n",
					"#dboOJDT = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOJDT.parquet', format='parquet')\r\n",
					"#dboOJDT.createOrReplaceTempView(\"dboOJDT\")\r\n",
					"\r\n",
					"#dboJDT1 = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboJDT1.parquet', format='parquet')\r\n",
					"#dboJDT1.createOrReplaceTempView(\"dboJDT1\")\r\n",
					"\r\n",
					"#dboOACT = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/SAP/dboOACT.parquet', format='parquet')\r\n",
					"#dboOACT.createOrReplaceTempView(\"dboOACT\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Start of QView scripting over to MSSQL for tables used in Transaction table"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SALES_INVOICES_INVENTORY_ITEMS_TMP = spark.sql(\"\"\"\r\n",
					"SELECT mjt.TransId,\r\n",
					"\t `Line_Description`,\r\n",
					"\t `Doc_Total`,\r\n",
					"\t `Line_Number`,\r\n",
					"\t `System_Account_Code`,\r\n",
					"\t sum(Credit) - sum(Debit) as `Line_Total`,\r\n",
					"\t 'Expense' as `Revenue/Expense_Category`,\r\n",
					"\t `Due_Date`,\r\n",
					"\t `Posting_Date2`,\r\n",
					"\t mjt.`ObjType`,\r\n",
					"\t TRIM(mjt.Project) as Project,\r\n",
					"\t TransCode,\r\n",
					"\t mjt.UserSign,\r\n",
					"\t `VAT_Group`,\r\n",
					"\t `VAT_%`,\r\n",
					"\t `ObjType_Journal`,\r\n",
					"\t sum( `VAT_Value`) as `VAT_Value`,\r\n",
					"\t sum(`GrossValue`) as `Gross_Value`,\r\n",
					"\t mjt.Company,\r\n",
					"\t SubDepotCode,\r\n",
					"\t 'Sales Invoice Inventory' as `Document_Category`,\r\n",
					"\t s.ItemCode as `Item_Code`,\r\n",
					"     if(DocType = 'I', 'Item',if(DocType = 'S', 'Service','Unknown')) as `Document_Type`,\r\n",
					"     s.CardCode as `Customer_Code`,\r\n",
					"\t i.InvntItem\r\n",
					"FROM MANUAL_JOURNAL_TMP mjt\r\n",
					"LEFT JOIN Sales_Invoice s\r\n",
					"       ON mjt.TransId = s.TransId\r\n",
					"LEFT JOIN Dim_Item i\r\n",
					"       ON s.ItemCode = i.ItemCode\r\n",
					"where mjt.ObjType = 13\r\n",
					"and (GroupMask = 5 or GroupMask = 6 or GroupMask = 7 or GroupMask = 8)\r\n",
					"AND CANCELED = 'N'\r\n",
					"group by mjt.TransId,\r\n",
					"\t `Line_Description`,\r\n",
					"\t `Doc_Total`,\r\n",
					"\t `Document_Type`,\r\n",
					"\t `Line_Number`,\r\n",
					"\t `System_Account_Code`,\r\n",
					"\t `Due_Date`,\r\n",
					"\t `Posting_Date2`,\r\n",
					"\t mjt.`ObjType`,\r\n",
					"\t mjt.Project,\r\n",
					"\t TransCode,\r\n",
					"\t mjt.UserSign,\r\n",
					"\t `VAT_Group`,\r\n",
					"\t `VAT_%`,\r\n",
					"\t `ObjType_Journal`,\r\n",
					"\t mjt.Company,\r\n",
					"\t SubDepotCode,\r\n",
					"\t s.ItemCode,\r\n",
					"\t DocType,\r\n",
					"\t s.CardCode,\r\n",
					"\t i.InvntItem\r\n",
					"\"\"\")\r\n",
					"#SALES_INVOICES_INVENTORY_ITEMS_TMP.show()\r\n",
					"SALES_INVOICES_INVENTORY_ITEMS_TMP.createOrReplaceTempView(\"SALES_INVOICES_INVENTORY_ITEMS_TMP\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PURCHASE_PRICE_VARIANCE = spark.sql(\"\"\"\r\n",
					"SELECT TransId,\r\n",
					"\t `Line_Description`,\r\n",
					"\t `Doc_Total`,\r\n",
					"\t `Document_Type`,\r\n",
					"\t `Line_Number`,\r\n",
					"\t `System_Account_Code`,\r\n",
					"\t sum(Debit) - sum(Credit) as `Line_Total`,\r\n",
					"\t 'Expense' as `Revenue/Expense_Category`,\r\n",
					"\t `Due_Date`,\r\n",
					"\t CAST(`Posting_Date2` AS DATE) as `Posting_Date2`,\r\n",
					"\t ObjType,\r\n",
					"\t TRIM(Project) as Project,\r\n",
					"\t TransCode,\r\n",
					"\t UserSign,\r\n",
					"\t `VAT_Group`,\r\n",
					"\t `VAT_%`,\r\n",
					"\t ObjType_Journal,\r\n",
					"\t sum(`VAT_Value`) as `VAT_Value`,\r\n",
					"\t sum(GrossValue) as `Gross_Value`,\r\n",
					"\t Company,\r\n",
					"\t SubDepotCode,\r\n",
					"\t 'Purchase Price Var' as `Document_Category`\r\n",
					"FROM MANUAL_JOURNAL_TMP\r\n",
					"where `System_Account_Code` = '_SYS00000010296'\r\n",
					"and Upper(left(`Line_Description`, 8)) <> 'YEAR END'\r\n",
					"group by TransId,\r\n",
					"\t `Line_Description`,\r\n",
					"\t `Doc_Total`,\r\n",
					"\t `Document_Type`,\r\n",
					"\t `Line_Number`,\r\n",
					"\t `System_Account_Code`,\r\n",
					"\t `Due_Date`,\r\n",
					"\t `Posting_Date2`,\r\n",
					"\t ObjType,\r\n",
					"\t Project,\r\n",
					"\t TransCode,\r\n",
					"\t UserSign,\r\n",
					"\t `VAT_Group`,\r\n",
					"\t `VAT_%`,\r\n",
					"\t `ObjType_Journal`,\r\n",
					"\t Company,\r\n",
					"\t SubDepotCode\r\n",
					"\"\"\")\r\n",
					"#PURCHASE_PRICE_VARIANCE.show()\r\n",
					"PURCHASE_PRICE_VARIANCE.createOrReplaceTempView(\"PURCHASE_PRICE_VARIANCE\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"COGS = spark.sql(\"\"\"\r\n",
					"SELECT TransId,\r\n",
					"\t `Line_Description`,\r\n",
					"\t `Doc_Total`,\r\n",
					"\t `Document_Type`,\r\n",
					"\t `Line_Number`,\r\n",
					"\t `System_Account_Code`,\r\n",
					"\t sum(Credit) - sum(Debit) as `Line_Total`,\r\n",
					"\t 'Expense' as `Revenue/Expense_Category`,\r\n",
					"\t `Due_Date`,\r\n",
					"\t date(`Posting_Date2`) as `Posting_Date2`,\r\n",
					"\t `ObjType`,\r\n",
					"\t TRIM(Project) as Project,\r\n",
					"\t TransCode,\r\n",
					"\t UserSign,\r\n",
					"\t `VAT_Group`,\r\n",
					"\t `VAT_%`,\r\n",
					"\t `ObjType_Journal`,\r\n",
					"\t sum( `VAT_Value`) as `VAT_Value`,\r\n",
					"\t sum(`GrossValue`) as `Gross_Value`,\r\n",
					"\t Company,\r\n",
					"\t SubDepotCode,\r\n",
					"\t 'Cost of Goods Sold Journal' as `Document_Category`\r\n",
					"FROM MANUAL_JOURNAL_TMP\r\n",
					"where `System_Account_Code` = '_SYS00000005261'\r\n",
					"and Upper(left(`Line_Description`, 8)) <> 'YEAR END'\r\n",
					"group by TransId,\r\n",
					"\t `Line_Description`,\r\n",
					"\t `Doc_Total`,\r\n",
					"\t `Document_Type`,\r\n",
					"\t `Line_Number`,\r\n",
					"\t `System_Account_Code`,\r\n",
					"\t `Due_Date`,\r\n",
					"\t `Posting_Date2`,\r\n",
					"\t `ObjType`,\r\n",
					"\t Project,\r\n",
					"\t TransCode,\r\n",
					"\t UserSign,\r\n",
					"\t `VAT_Group`,\r\n",
					"\t `VAT_%`,\r\n",
					"\t `ObjType_Journal`,\r\n",
					"\t Company,\r\n",
					"\t SubDepotCode\r\n",
					"\"\"\")\r\n",
					"#COGS..show()\r\n",
					"COGS.createOrReplaceTempView(\"COGS\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TMPDOCDISC = spark.sql(\"\"\"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"     DocNum, \r\n",
					"     (DiscSum * -1) as DocDisc,\r\n",
					"     'Sales Invoice' as `Document_Category`\r\n",
					"FROM dboOINV\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"     DocNum, \r\n",
					"     DiscSum as DocDisc,\r\n",
					"     'Sales Credit Note' as `Document_Category`\r\n",
					"FROM dboORIN\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"       DocNum, \r\n",
					"       DiscSum as DocDisc,\r\n",
					"       'Purchase Invoice' as `Document_Category`\r\n",
					"FROM dboOPCH\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"        DocNum, \r\n",
					"        DiscSum * -1 as DocDisc,\r\n",
					"       'Purchase Credit Note' as `Document_Category`\r\n",
					"FROM dboORPC\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"       DocNum, \r\n",
					"       DiscSum as DocDisc,\r\n",
					"       'Goods Receipt Note' as `Document_Category`\r\n",
					"FROM dboOPDN\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"     DocNum, \r\n",
					"     DiscSum,\r\n",
					"     'Goods Issue' as `Document_Category`\r\n",
					"FROM dboOIGE\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"     DocNum, \r\n",
					"     DiscSum * -1 as DocDisc,\r\n",
					"     'Goods Receipt' as `Document_Category`\r\n",
					"FROM dboOPDN\r\n",
					"\r\n",
					"UNION ALL\r\n",
					"\r\n",
					"SELECT \"City Logistics New\" as Company, \r\n",
					"     DocNum, \r\n",
					"     DiscSum * -1 as DocDisc,\r\n",
					"     'Goods Return' as `Document_Category`\r\n",
					"FROM dboORPD\r\n",
					"\"\"\")\r\n",
					"#TMPDOCDISC.show()\r\n",
					"TMPDOCDISC.createOrReplaceTempView(\"TMPDOCDISC\")"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"Goods_Receipts_HACK = spark.sql(\"\"\"\r\n",
					"SELECT ojdt.TransId,\r\n",
					"\t   Memo as `Line_Description`,\r\n",
					"\t   LineMemo as `Line_Detail`,\r\n",
					"\t   jdt1.Ref1 as `Journal_Item_Ref`,\r\n",
					"\t   jdt1.Ref2 as  `Journal_BP_Ref`,\r\n",
					"\t   LocTotal as `Doc_Total`,\r\n",
					"\t   CASE WHEN ojdt.DocType = 'I' THEN 'Item'\r\n",
					"            WHEN ojdt.DocType = 'S' THEN 'Service'\r\n",
					"            ELSE 'Manual'\r\n",
					"       END AS `Document_Type`,\r\n",
					"\t   Line_ID as `Line_Number`,\r\n",
					"\t   Account as `System_Account_Code`,\r\n",
					"\t   sum(Debit) - sum(Credit) `Line_Total`,\r\n",
					"\t   --'Assets' as `Revenue/Expense_Category`,\r\n",
					"\t   jdt1.DueDate as `Due_Date`,\r\n",
					"\t   CAST(jdt1.RefDate as DATE) as `Posting_Date2`,\r\n",
					"\t   jdt1.ObjType,\r\n",
					"\t   TRIM(jdt1.Project) as Project,\r\n",
					"\t   jdt1.TransCode,\r\n",
					"\t   jdt1.UserSign,\r\n",
					"\t   VatGroup as `VAT_Group`,\r\n",
					"\t   VatRate as `VAT_%`,\r\n",
					"\t   jdt1.ObjType as `ObjType_Journal`,\r\n",
					"\t   sum(VatAmount) as VAT_Value,\r\n",
					"\t   sum(GrossValue) as Gross_Value,\r\n",
					"       \"City Logistics New\" as Company,\r\n",
					"\t   U_DEPOT as `SubDepotCode`,\r\n",
					" 'Expense' as `Revenue/Expense_Category`,\r\n",
					"     'Goods Receipt Note' as `Document_Category`,\r\n",
					"     'Actual' as Type\r\n",
					"FROM dboOJDT ojdt\r\n",
					"LEFT JOIN dboJDT1 jdt1\r\n",
					"ON ojdt.TransId = jdt1.TransId\r\n",
					"LEFT JOIN dboOACT oact\r\n",
					"ON jdt1.Account = oact.AcctCode\r\n",
					"where GroupMask = 6\r\n",
					"and ojdt.TransId IN (311478,311479,311480,311481,311482,311484,311485) --HACK!!!!!\r\n",
					"group by ojdt.TransId,\r\n",
					"\t     Memo,\r\n",
					"         LineMemo ,\r\n",
					"         jdt1.Ref1,\r\n",
					"         jdt1.Ref2,\r\n",
					"         LocTotal,\r\n",
					"         ojdt.DocType,\r\n",
					"         Line_ID,\r\n",
					"         Account,\r\n",
					"         jdt1.DueDate,\r\n",
					"         jdt1.RefDate,\r\n",
					"         jdt1.ObjType,\r\n",
					"         jdt1.Project,\r\n",
					"         jdt1.TransCode,\r\n",
					"         jdt1.UserSign,\r\n",
					"         VatGroup,\r\n",
					"         VatRate,\r\n",
					"         jdt1.ObjType,\r\n",
					"         Company,\r\n",
					"         U_DEPOT\r\n",
					"\"\"\")\r\n",
					"#Goods_Receipts_HACK.show()\r\n",
					"Goods_Receipts_HACK.createOrReplaceTempView(\"Goods_Receipts_HACK\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write success message for production script"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Scripts have successfully executed\")"
				],
				"execution_count": null
			}
		]
	}
}