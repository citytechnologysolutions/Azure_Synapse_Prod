{
	"name": "12_DIST_ST3MonthRoling",
	"properties": {
		"folder": {
			"name": "TRANSFORM/02 STRUCTURED/Ops/Distribution"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "DevSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2c158a7f-0508-4577-bd71-1c60d2f19b29"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/DevSparkPool",
				"name": "DevSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/DevSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# Environment = mssparkutils.env.getWorkspaceName()\r\n",
					"# if 'prod' in Environment:\r\n",
					"#     StorageAccount = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountRead = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountRead2 = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountWrite = 'citylogisticsstorageprod'\r\n",
					"# else:\r\n",
					"#     StorageAccount = 'citylogisticsstorage'\r\n",
					"#     StorageAccountRead = 'citylogisticsstorageprod'\r\n",
					"#     StorageAccountRead2 = 'citylogisticsstorage'\r\n",
					"#     StorageAccountWrite = 'citylogisticsstorage'\r\n",
					"\r\n",
					"# # ' + StorageAccount + '"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# #create dataframe for the stparcel lms table\r\n",
					"# stparcel = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stparcel.parquet/', format='parquet')\r\n",
					"# stparcel.createOrReplaceTempView(\"stparcel\")\r\n",
					"\r\n",
					"# #Create DataFrame for the stlmstrack LMS Table\r\n",
					"# stlmstrack = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stlmstrack.parquet', format='parquet')\r\n",
					"# stlmstrack.createOrReplaceTempView(\"stlmstrack\")\r\n",
					"\r\n",
					"# #create dataframe for the stconsignment lms table\r\n",
					"# stconsignment = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stconsignment.parquet/', format='parquet')\r\n",
					"# stconsignment.createOrReplaceTempView(\"stconsignment\")\r\n",
					"\r\n",
					"# #create dataframe for the stwaybill lms table\r\n",
					"# stwaybill = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stwaybill.parquet/', format='parquet')\r\n",
					"# stwaybill.createOrReplaceTempView(\"stwaybill\")\r\n",
					"\r\n",
					"# #create dataframe for the storder lms table\r\n",
					"# storder = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/storder.parquet/', format='parquet')\r\n",
					"# storder.createOrReplaceTempView(\"storder\")\r\n",
					"\r\n",
					"# #Create DataFrame for the stloadparent LMS Table\r\n",
					"# stloadparent = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stloadparent.parquet', format='parquet')\r\n",
					"# stloadparent.createOrReplaceTempView(\"stloadparent\")\r\n",
					"\r\n",
					"# #Create DataFrame for the stloadchild LMS Table\r\n",
					"# stloadchild = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stloadchild.parquet', format='parquet')\r\n",
					"# stloadchild.createOrReplaceTempView(\"stloadchild\")\r\n",
					"\r\n",
					"# #Create DataFrame for the stcollection LMS Table\r\n",
					"# stcollection = spark.read.load('abfss://synapse@' + StorageAccountRead2 + '.dfs.core.windows.net/Structured Data/OPS/stcollection.parquet', format='parquet')\r\n",
					"# stcollection.createOrReplaceTempView(\"stcollection\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PARCEL CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stparcel3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    *\r\n",
					"FROM stparcel\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_parcel_pdate >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_parcel_pdate <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_parcel_pdate >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_parcel_pdate <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stparcel3myoy = spark.sql(\"SELECT * FROM stparcel3myoy\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stparcel3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stparcel3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"CONSIGNEMT CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stconsignment3myoy_tmp1\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_consignment_id\r\n",
					"FROM stconsignment\r\n",
					"\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_consignment_cdate >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_consignment_cdate <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_consignment_cdate >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_consignment_cdate <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stconsignment3myoy_tmp2\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_parcel_consignid as lms_consignment_id\r\n",
					"FROM stparcel3myoy\r\n",
					"WHERE lms_parcel_consignid IS NOT NULL\r\n",
					""
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stconsignment3myoy_tmp3 = spark.sql(\"SELECT * FROM stconsignment3myoy_tmp1 UNION SELECT * FROM stconsignment3myoy_tmp2\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stconsignment3myoy_tmp3.createOrReplaceTempView(\"stconsignment3myoy_tmp3\")"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stconsignment3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    c.*\r\n",
					"FROM stconsignment3myoy_tmp3 t\r\n",
					"LEFT JOIN stconsignment c on c.lms_consignment_id = t.lms_consignment_id\r\n",
					"WHERE c.lms_consignment_id IS NOT NULL"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stconsignment3myoy = spark.sql(\"SELECT * FROM stconsignment3myoy\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stconsignment3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stconsignment3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"WAYBILL CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stwaybill3myoy_tmp1\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_waybill_id\r\n",
					"FROM stwaybill\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_waybill_date >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_waybill_date <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_waybill_date >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_waybill_date <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stwaybill3myoy_tmp2\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_parcel_waybillid as lms_waybill_id\r\n",
					"FROM stparcel3myoy\r\n",
					""
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stwaybill3myoy_tmp3 = spark.sql(\"SELECT * FROM stwaybill3myoy_tmp1 UNION SELECT * FROM stwaybill3myoy_tmp2\")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stwaybill3myoy_tmp3.createOrReplaceTempView(\"stwaybill3myoy_tmp3\")"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stwaybill3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    w.*\r\n",
					"FROM stwaybill3myoy_tmp3 t\r\n",
					"LEFT JOIN stwaybill w on w.lms_waybill_id = t.lms_waybill_id\r\n",
					"WHERE w.lms_waybill_id IS NOT NULL"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stwaybill3myoy = spark.sql(\"SELECT * FROM stwaybill3myoy\")"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stwaybill3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stwaybill3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 19
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"ORDER CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"storder3myoy_tmp1\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_order_id\r\n",
					"FROM storder\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_order_hodate >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_order_hodate <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_order_hodate >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_order_hodate <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"storder3myoy_tmp2\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_parcel_waybillid as lms_waybill_id\r\n",
					"FROM stparcel3myoy"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"storder3myoy_tmp3 = spark.sql(\"SELECT * FROM storder3myoy_tmp1 UNION SELECT * FROM storder3myoy_tmp2\")"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"storder3myoy_tmp3.createOrReplaceTempView(\"storder3myoy_tmp3\")"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"storder3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    o.*\r\n",
					"FROM storder3myoy_tmp3 t\r\n",
					"LEFT JOIN storder o on o.lms_order_id = t.lms_order_id\r\n",
					"WHERE o.lms_order_id IS NOT NULL"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"storder3myoy = spark.sql(\"SELECT * FROM storder3myoy\")"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# storder3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/storder3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 26
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"TRACK CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stlmstrack3myoy_tmp1\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_track_parcelid,\r\n",
					"    lms_track_loadid\r\n",
					"FROM stlmstrack\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_track_opendt >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_track_opendt <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_track_opendt >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_track_opendt <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")"
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stlmstrack3myoy_tmp = spark.sql(\"SELECT * FROM stlmstrack3myoy_tmp1\")"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stlmstrack3myoy_tmp.createOrReplaceTempView(\"stlmstrack3myoy_tmp\")"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stlmstrack3myoy_tmp2\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_parcel_id as lms_track_parcelid\r\n",
					"FROM stparcel3myoy "
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stlmstrack3myoy_tmp3 = spark.sql(\"SELECT lms_track_parcelid FROM stlmstrack3myoy_tmp1 UNION SELECT * FROM stlmstrack3myoy_tmp2\")"
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stlmstrack3myoy_tmp3.createOrReplaceTempView(\"stlmstrack3myoy_tmp3\")"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stlmstrack3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    t.*\r\n",
					"FROM stlmstrack3myoy_tmp3 t1\r\n",
					"LEFT JOIN stlmstrack t on t.lms_track_parcelid = t1.lms_track_parcelid\r\n",
					""
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stlmstrack3myoy = spark.sql(\"SELECT * FROM stlmstrack3myoy\")"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stlmstrack3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stlmstrack3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 35
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"LOAD CHILD CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadchild3myoy_tmp1\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_loadchild_id,\r\n",
					"    lms_loadchild_parentloadid\r\n",
					"FROM stloadchild\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_loadchild_ldate >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_loadchild_ldate <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_loadchild_ldate >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_loadchild_ldate <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					""
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadchild3myoy_tmp = spark.sql(\"SELECT * FROM stloadchild3myoy_tmp1\")"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadchild3myoy_tmp.createOrReplaceTempView(\"stloadchild3myoy_tmp\")"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadchild3myoy_tmp2\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_track_loadid as lms_loadchild_id\r\n",
					"FROM stlmstrack3myoy_tmp"
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadchild3myoy_tmp3 = spark.sql(\"SELECT lms_loadchild_id FROM stloadchild3myoy_tmp1 UNION SELECT * FROM stloadchild3myoy_tmp2\")"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadchild3myoy_tmp3.createOrReplaceTempView(\"stloadchild3myoy_tmp3\")"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadchild3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lc.*\r\n",
					"FROM stloadchild3myoy_tmp3 t\r\n",
					"LEFT JOIN stloadchild lc on lc.lms_loadchild_id = t.lms_loadchild_id\r\n",
					"WHERE lc.lms_loadchild_id IS NOT NULL\r\n",
					"AND lc.lms_loadchild_ldate IS NOT NULL"
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadchild3myoy = spark.sql(\"SELECT * FROM stloadchild3myoy\")"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stloadchild3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stloadchild3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 44
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"LOAD PARENT CURRENT AND PRIOR YEAR 3MONTHS"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadparent3myoy_tmp1\r\n",
					"AS\r\n",
					"SELECT DISTINCT\r\n",
					"    lms_loadchild_parentloadid as lms_loadparent_parentloadid\r\n",
					"FROM stloadchild3myoy_tmp \r\n",
					"WHERE lms_loadchild_parentloadid IS NOT NULL"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadparent3myoy_tmp2\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_track_loadid as lms_loadparent_parentloadid\r\n",
					"FROM stlmstrack3myoy_tmp\r\n",
					""
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadparent3myoy_tmp3 = spark.sql(\"SELECT * FROM stloadparent3myoy_tmp1 UNION SELECT * FROM stloadparent3myoy_tmp2\")"
				],
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadparent3myoy_tmp3.createOrReplaceTempView(\"stloadparent3myoy_tmp3\")"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadparent3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lp.*\r\n",
					"FROM stloadparent3myoy_tmp3 t\r\n",
					"LEFT JOIN stloadparent lp on lp.lms_loadparent_parentloadid = t.lms_loadparent_parentloadid\r\n",
					"WHERE lp.lms_loadparent_parentloadid IS NOT NULL"
				],
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadparent3myoy = spark.sql(\"SELECT * FROM stloadparent3myoy\")"
				],
				"execution_count": 50
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stloadparent3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stloadparent3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 51
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stcollection3myoy\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    *\r\n",
					"FROM stcollection\r\n",
					"WHERE \r\n",
					"(\r\n",
					"    lms_collect_date >= (to_timestamp(year(current_date())||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_collect_date <= (to_timestamp(year(current_date())||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")\r\n",
					"OR \r\n",
					"(\r\n",
					"    lms_collect_date >= (to_timestamp((year(current_date())-1)||'-'||(month(current_date())-3)||'-'||'01'))\r\n",
					"AND \r\n",
					"    lms_collect_date <= (to_timestamp(year(current_date())-1||'-'||month(current_date())||'-'||day(current_date())||'T23:59:59'))\r\n",
					")"
				],
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stcollection3myoy = spark.sql(\"SELECT * FROM stcollection3myoy\")"
				],
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stcollection3myoy.write.parquet('abfss://synapse@' + StorageAccountWrite + '.dfs.core.windows.net/Structured Data/OPS/stcollection3myoy.parquet', mode = \"overwrite\")"
				],
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"SUCCESS\")"
				],
				"execution_count": 55
			}
		]
	}
}