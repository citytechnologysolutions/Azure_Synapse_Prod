{
	"name": "16- Operations_LMS_OnRouteDet_3MRolling_CustomerRoute_PROD",
	"properties": {
		"folder": {
			"name": "ARCHIVE/PROD/Operations Notebooks PROD"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PRDSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "82a286f5-c7a9-4af2-81dd-6822b9f7c00c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/ApacheSparkPool",
				"name": "ApacheSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Load Source Data from the Datalake"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# The scource files are uncommented for the Productionized run (Remove the `#` when troubleshooting these scripts)\r\n",
					"\r\n",
					"#dboCustomer = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboCustomer.parquet', format='parquet')\r\n",
					"#dboCustomer.createOrReplaceTempView(\"dboCustomer\")\r\n",
					"\r\n",
					"#dboBill_BillCustomersR = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_BillCustomersR.parquet', format='parquet')\r\n",
					"#dboBill_BillCustomersR.createOrReplaceTempView(\"dboBill_BillCustomersR\")\r\n",
					"\r\n",
					"#dboBill_ProductCategory = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_ProductCategory.parquet', format='parquet')\r\n",
					"#dboBill_ProductCategory.createOrReplaceTempView(\"dboBill_ProductCategory\")\r\n",
					"\r\n",
					"#dboBill_CustomerGroups = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_CustomerGroups.parquet', format='parquet')\r\n",
					"#dboBill_CustomerGroups.createOrReplaceTempView(\"dboBill_CustomerGroups\")\r\n",
					"\r\n",
					"#dboBill_CustomerGroupTypes = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboBill_CustomerGroupTypes.parquet', format='parquet')\r\n",
					"#dboBill_CustomerGroupTypes.createOrReplaceTempView(\"dboBill_CustomerGroupTypes\")\r\n",
					"\r\n",
					"#dboSRoute = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboSRoute.parquet', format='parquet')\r\n",
					"#dboSRoute.createOrReplaceTempView(\"dboSRoute\")\r\n",
					"\r\n",
					"#dboSRouteGroup = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboSRouteGroup.parquet', format='parquet')\r\n",
					"#dboSRouteGroup.createOrReplaceTempView(\"dboSRouteGroup\")\r\n",
					"\r\n",
					"#dboZone = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboZone.parquet', format='parquet')\r\n",
					"#dboZone.createOrReplaceTempView(\"dboZone\")\r\n",
					"\r\n",
					"#dboLocation = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/LMS/dboLocation.parquet', format='parquet')\r\n",
					"#dboLocation.createOrReplaceTempView(\"dboLocation\")\r\n",
					"\r\n",
					"#publiccustomer = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Unstructured Data/Onroute/publiccustomer.parquet', format='parquet')\r\n",
					"#publiccustomer.createOrReplaceTempView(\"publiccustomer\")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Start of QView scripting translated of to MSSQL"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"DCUSTOMER_1 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT `ID`      AS `CD_ID`,\r\n",
					"`ID`      AS `OD_DeliverCustID`,\r\n",
					"`SRouteID`     AS `CD_SR_ID`,\r\n",
					"`Name`      AS `CD_Name`,\r\n",
					"`ContactPerson`   AS `CD_ContactPerson`,\r\n",
					"`TelNo`     AS `CD_TelNo`,\r\n",
					"`FaxNo`     AS `CD_FaxNo`,\r\n",
					"`Email`     AS `CD_Email`,\r\n",
					"`Adres1`     AS `CD_Adres1`,\r\n",
					"`Adres2`     AS `CD_Adres2`,\r\n",
					"`Town`      AS `CD_Town`,\r\n",
					"`PCode`     AS `CD_PCode`,\r\n",
					"`Discount`     AS `CD_Discount`,\r\n",
					"`CustMainID`    AS `CD_CustMainID`,\r\n",
					"`IsBillTo`     AS `CD_IsBillTo`,\r\n",
					"`CRef`      AS `CD_CRef`,\r\n",
					"`VolFact`     AS `CD_VolFact`,\r\n",
					"`DualBillCourier`   AS `CD_DualBillCourier`,\r\n",
					"`CRouteID`     AS `CD_CRouteID`,\r\n",
					"`CustRouteGroupID`   AS `CD_CustRouteGroupID`,\r\n",
					"`SRouteID2`    AS `CD_SRouteID2`,\r\n",
					"`brouteid`     AS `CD_brouteid`,\r\n",
					"`Maincust`     AS `CD_Maincust`,\r\n",
					"`Deliverby1`    AS `CD_Deliverby1`,\r\n",
					"`ServRouteID`    AS `CD_ServRouteID`,\r\n",
					"`CustRateid`    AS `CD_CustRateid`,\r\n",
					"`CType`     AS `CD_CType`,\r\n",
					"`Appointment`    AS `CD_Appointment`,\r\n",
					"`ccRoute`     AS `CD_ccRoute`,\r\n",
					"`ccDepot`     AS `CD_ccDepot`,\r\n",
					"`CustGroupID`    AS `CD_CustGroupID`,\r\n",
					"`IsManual`     AS `CD_IsManual`,\r\n",
					"`StoreID`     AS `CD_StoreID`,\r\n",
					"`oldStoreID`    AS `CD_oldStoreID`,\r\n",
					"`BType`     AS `CD_BType`,\r\n",
					"`AreaDesc`     AS `CD_AreaDesc`,\r\n",
					"`OnHoldBegin`    AS `CD_OnHoldBegin`,\r\n",
					"`OnHoldEnd`     AS `CD_OnHoldEnd`,\r\n",
					"`CustServiceTime`   AS `CD_CustServiceTime`,\r\n",
					"`CustServiceDays`   AS `CD_CustServiceDays`,\r\n",
					"`FCType`     AS `CD_FCType`,\r\n",
					"`OnHoldID`     AS `CD_OnHoldID`,\r\n",
					"`FLevy`     AS `CD_FLevy`,\r\n",
					"`DC`      AS `CD_DC`,\r\n",
					"`DeliveryDepotID`   AS `CD_DeliveryDepotID`,\r\n",
					"`CREF2`     AS `CD_CREF2`,\r\n",
					"`WBPerORD`     AS `CD_WBPerORD`,\r\n",
					"`ALTTELNO`     AS `CD_ALTTELNO`,\r\n",
					"`Bill_RouteID`    AS `CD_Bill_RouteID`,\r\n",
					"`Bill_ServiceTypeID`  AS `CD_Bill_ServiceTypeID`,\r\n",
					"`FWApiKey`     AS `CD_FWApiKey`,\r\n",
					"`FWUserID`     AS `CD_FWUserID`,\r\n",
					"`FWMultiBusinessID`  AS `CD_FWMultiBusinessID`,\r\n",
					"`FWCostCentreID`   AS `CD_FWCostCentreID`,\r\n",
					"`ChainStoreFlag`   AS `CD_ChainStoreFlag`,\r\n",
					"`PCodeID`     AS `CD_PCodeID`,\r\n",
					"`DefDelPCode`    AS `CD_DefDelPCode`,\r\n",
					"`AutoEmailFlag`   AS `CD_AutoEmailFlag`,\r\n",
					"`WType`     AS `CD_WType`,\r\n",
					"`NDDID`     AS `CD_NDDID`,\r\n",
					"`CONSPerORD`    AS `CD_CONSPerORD`,\r\n",
					"`InCompleteOrderChkFlag` AS `CD_InCompleteOrderChkFlag`,\r\n",
					"`MaxCartons`    AS `CD_MaxCartons`,\r\n",
					"`ActiveFlag`    AS `CD_ActiveFlag`,\r\n",
					"`Suburb`     AS `CD_Suburb`,\r\n",
					"`CallProgID`    AS `CD_CallProgID`,\r\n",
					"`Address_Status`   AS `CD_Address_Status`,\r\n",
					"`Address_Status_Date`  AS `CD_Address_Status_Date`,\r\n",
					"`Address_Status_User`  AS `CD_Address_Status_User`,\r\n",
					"`Address_Terrain_Type`  AS `CD_Address_Terrain_Type`,\r\n",
					"`Latitude`     AS `CD_Latitude`,\r\n",
					"`Longitude`    AS `CD_Longitude`,\r\n",
					"`CallProgUpdDate`   AS `CD_CallProgUpdDate`\r\n",
					"FROM dboCustomer\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DCUSTOMER_1.show()\r\n",
					"DCUSTOMER_1.createOrReplaceTempView(\"DCUSTOMER_1\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"DCUSTOMER_2 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT CD_ID,\r\n",
					"    CD_ID as `customer.lmsid`,\r\n",
					"    CD_Name,\r\n",
					"    CD_SR_ID,\r\n",
					"    OD_DeliverCustID,\r\n",
					"    CD_CustMainID\r\n",
					"FROM DCUSTOMER_1\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DCUSTOMER_2.show()\r\n",
					"DCUSTOMER_2.createOrReplaceTempView(\"DCUSTOMER_2\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"DSROUTE = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT sr.ID AS `CD_SR_ID`,\r\n",
					"       sr.BillCustID AS `CD_SR_BillCustID`,\r\n",
					"       sr.CourierID AS `CD_SR_CourierID`,\r\n",
					"       sr.Description AS `CD_SR_Description`,\r\n",
					"       sr.Code AS `CD_SR_Code`,\r\n",
					"       sr.id2 AS `CD_SR_ID2`,\r\n",
					"       sr.SRouteGroupID AS `CD_SR_SRouteGroupID`,\r\n",
					"       sr.ZoneID AS `CD_SR_ZoneID`,\r\n",
					"       sr.broutemasterID AS `CD_SR_BRouteMasterID`,\r\n",
					"       sr.LocalFlag AS `CD_SR_LocalFlag`,\r\n",
					"       sr.Area AS `CD_SR_Area`,\r\n",
					"       sg.ID AS `CD_SG_ID`,\r\n",
					"       sg.Description AS `CD_SG_Description`,\r\n",
					"       sg.Code AS `CD_SG_Code`\r\n",
					"\r\n",
					"FROM dboSRoute sr\r\n",
					"LEFT JOIN dboSRouteGroup sg \r\n",
					"       ON sg.ID = sr.SRouteGroupID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DSROUTE.show()\r\n",
					"DSROUTE.createOrReplaceTempView(\"DSROUTE\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"DSROUTE_2 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT CD_SR_ID,\r\n",
					"       CD_SR_Description,\r\n",
					"       CD_SR_LocalFlag,\r\n",
					"       IF(CD_SR_LocalFlag = 0,'Outlying',\r\n",
					"       IF(CD_SR_LocalFlag = 1,'Local',\r\n",
					"       IF(CD_SR_LocalFlag = 2,'Export','#'))) AS CD_SR_DeliverRouteGroup,\r\n",
					"       CD_SR_SRouteGroupID,\r\n",
					"       CD_SR_ZoneID,\r\n",
					"       CD_SG_Description\r\n",
					"FROM DSROUTE\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DSROUTE_2.show()\r\n",
					"DSROUTE_2.createOrReplaceTempView(\"DSROUTE_2\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"DCUSTOMER_2 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT dc.CD_ID,\r\n",
					"       dc.CD_ID as `customer.lmsid`,\r\n",
					"       dc.CD_Name,\r\n",
					"       dc.CD_SR_ID,\r\n",
					"       dc.OD_DeliverCustID,\r\n",
					"       dc.CD_CustMainID,\r\n",
					"\r\n",
					"       dsr.CD_SR_Description,\r\n",
					"       dsr.CD_SR_LocalFlag,\r\n",
					"       IF(dsr.CD_SR_LocalFlag = 0,'Outlying',\r\n",
					"       IF(dsr.CD_SR_LocalFlag = 1,'Local',\r\n",
					"       IF(dsr.CD_SR_LocalFlag = 2,'Export','#'))) AS CD_SR_DeliverRouteGroup,\r\n",
					"       dsr.CD_SR_SRouteGroupID,\r\n",
					"       dsr.CD_SR_ZoneID,\r\n",
					"       dsr.CD_SG_Description\r\n",
					"\r\n",
					"FROM DCUSTOMER_1 dc\r\n",
					"LEFT JOIN DSROUTE_2 dsr\r\n",
					"       ON dc.CD_SR_ID = dsr.CD_SR_ID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DCUSTOMER_2.show()\r\n",
					"DCUSTOMER_2.createOrReplaceTempView(\"DCUSTOMER_2\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"ZONE_QVD = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT Id AS ZN_ID\r\n",
					"      ,Code as ZN_Code\r\n",
					"      ,Description as ZN_Description\r\n",
					"      ,ISOCode as ZN_ISOCode\r\n",
					"      ,LocID as ZN_LocID\r\n",
					"      ,ZoneMasterID as ZN_ZoneMasterID\r\n",
					"FROM dboZone\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#ZONE_QVD.show()\r\n",
					"ZONE_QVD.createOrReplaceTempView(\"ZONE_QVD\")"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"DCUSTOMER_3 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT dc2.*\r\n",
					"      ,ZN_Code AS CD_ZN_Code\r\n",
					"      ,ZN_Description AS CD_ZN_Description\r\n",
					"      ,ZN_ISOCode AS CD_ZN_ISOCode\r\n",
					"      ,ZN_LocID AS CD_ZN_LocID\r\n",
					"      ,ZN_ZoneMasterID AS CD_ZN_ZoneMasterID\r\n",
					"FROM DCUSTOMER_2 dc2\r\n",
					"LEFT JOIN ZONE_QVD zq\r\n",
					"      ON dc2.CD_SR_ZoneID = zq.ZN_ID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DCUSTOMER_3.show()\r\n",
					"DCUSTOMER_3.createOrReplaceTempView(\"DCUSTOMER_3\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"LFLOCATION = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT ID AS FL_ID,\r\n",
					"       Description AS FL_Description,\r\n",
					"       Code AS FL_Code,\r\n",
					"       Collect AS FL_Collect,\r\n",
					"       PCode AS FL_PCode,\r\n",
					"       CustID AS FL_CustID,\r\n",
					"       Retail AS FL_Retail,\r\n",
					"       Scale AS FL_Scale,\r\n",
					"       CustCode AS FL_CustCode,\r\n",
					"       CaptureOnly AS FL_CaptureOnly,\r\n",
					"       ZoneID AS FL_ZoneID,\r\n",
					"       ScanType AS FL_ScanType,\r\n",
					"       BillCustID AS FL_BillCustID,\r\n",
					"       Latitude AS FL_Latitude,\r\n",
					"       Longitude AS FL_Longitude,\r\n",
					"       HoldLocID AS FL_HoldLocID,\r\n",
					"       BranchManagerUserID AS FL_BranchManagerUserID,\r\n",
					"       FWCostCentre AS FL_FWCostCentre,\r\n",
					"       FWUserID AS FL_FWUserID,\r\n",
					"       FWMultiBusinessID AS FL_FWMultiBusinessID,\r\n",
					"       GLCode AS FL_GLCode,\r\n",
					"       HoldLocParentLocID AS FL_HoldLocParentLocID\r\n",
					"FROM dboLocation\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#LFLOCATION.show()\r\n",
					"LFLOCATION.createOrReplaceTempView(\"LFLOCATION\")"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"DCUSTOMER_4 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT dc3.*\r\n",
					"      ,lfl.FL_Description AS CD_ZN_DepotDescription\r\n",
					"FROM DCUSTOMER_3 dc3\r\n",
					"LEFT JOIN LFLOCATION lfl\r\n",
					"       ON dc3.CD_ZN_LocID = lfl.FL_ID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#DCUSTOMER_4.show()\r\n",
					"DCUSTOMER_4.createOrReplaceTempView(\"DCUSTOMER_4\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PCUSTOMER = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT `ID` \t\t\t\t\tAS `CP_ID`,\r\n",
					"`ID` \t\t\t\t\tAS `OD_PickUpCustID`,\r\n",
					"`SRouteID` \t\t\t\tAS `CP_SR_ID`,\r\n",
					"`Name` \t\t\t\t\tAS `CP_Name`,\r\n",
					"`ContactPerson` \t\tAS `CP_ContactPerson`,\r\n",
					"`TelNo` \t\t\t\tAS `CP_TelNo`,\r\n",
					"`FaxNo` \t\t\t\tAS `CP_FaxNo`,\r\n",
					"`Email` \t\t\t\tAS `CP_Email`,\r\n",
					"`Adres1` \t\t\t\tAS `CP_Adres1`,\r\n",
					"`Adres2` \t\t\t\tAS `CP_Adres2`,\r\n",
					"`Town` \t\t\t\t\tAS `CP_Town`,\r\n",
					"`PCode` \t\t\t\tAS `CP_PCode`,\r\n",
					"`Discount` \t\t\t\tAS `CP_Discount`,\r\n",
					"`CustMainID` \t\t\tAS `CP_CustMainID`,\r\n",
					"`IsBillTo` \t\t\t\tAS `CP_IsBillTo`,\r\n",
					"`CRef` \t\t\t\t\tAS `CP_CRef`,\r\n",
					"`VolFact` \t\t\t\tAS `CP_VolFact`,\r\n",
					"`DualBillCourier` \t\tAS `CP_DualBillCourier`,\r\n",
					"`CRouteID` \t\t\t\tAS `CP_CRouteID`,\r\n",
					"`CustRouteGroupID` \t\tAS `CP_CustRouteGroupID`,\r\n",
					"`SRouteID2` \t\t\tAS `CP_SRouteID2`,\r\n",
					"`brouteid` \t\t\t\tAS `CP_brouteid`,\r\n",
					"`Maincust` \t\t\t\tAS `CP_Maincust`,\r\n",
					"`Deliverby1` \t\t\tAS `CP_Deliverby1`,\r\n",
					"`ServRouteID` \t\t\tAS `CP_ServRouteID`,\r\n",
					"`CustRateid` \t\t\tAS `CP_CustRateid`,\r\n",
					"`CType` \t\t\t\tAS `CP_CType`,\r\n",
					"`Appointment` \t\t\tAS `CP_Appointment`,\r\n",
					"`ccRoute` \t\t\t\tAS `CP_ccRoute`,\r\n",
					"`ccDepot` \t\t\t\tAS `CP_ccDepot`,\r\n",
					"`CustGroupID` \t\t\tAS `CP_CustGroupID`,\r\n",
					"`IsManual` \t\t\t\tAS `CP_IsManual`,\r\n",
					"`StoreID` \t\t\t\tAS `CP_StoreID`,\r\n",
					"`oldStoreID` \t\t\tAS `CP_oldStoreID`,\r\n",
					"`BType` \t\t\t\tAS `CP_BType`,\r\n",
					"`AreaDesc` \t\t\t\tAS `CP_AreaDesc`,\r\n",
					"`OnHoldBegin` \t\t\tAS `CP_OnHoldBegin`,\r\n",
					"`OnHoldEnd`\t\t\t \tAS `CP_OnHoldEnd`,\r\n",
					"`CustServiceTime` \t\tAS `CP_CustServiceTime`,\r\n",
					"`CustServiceDays` \t\tAS `CP_CustServiceDays`,\r\n",
					"`FCType` \t\t\t\tAS `CP_FCType`,\r\n",
					"`OnHoldID` \t\t\t\tAS `CP_OnHoldID`,\r\n",
					"`FLevy` \t\t\t\tAS `CP_FLevy`,\r\n",
					"`DC` \t\t\t\t\tAS `CP_DC`,\r\n",
					"`DeliveryDepotID` \t\tAS `CP_DeliveryDepotID`,\r\n",
					"`CREF2` \t\t\t\tAS `CP_CREF2`,\r\n",
					"`WBPerORD` \t\t\t\tAS `CP_WBPerORD`,\r\n",
					"`ALTTELNO` \t\t\t\tAS `CP_ALTTELNO`,\r\n",
					"`Bill_RouteID` \t\t\tAS `CP_Bill_RouteID`,\r\n",
					"`Bill_ServiceTypeID` \tAS `CP_Bill_ServiceTypeID`,\r\n",
					"`FWApiKey` \t\t\t\tAS `CP_FWApiKey`,\r\n",
					"`FWUserID` \t\t\t\tAS `CP_FWUserID`,\r\n",
					"`FWMultiBusinessID` \tAS `CP_FWMultiBusinessID`,\r\n",
					"`FWCostCentreID` \t\tAS `CP_FWCostCentreID`,\r\n",
					"`ChainStoreFlag` \t\tAS `CP_ChainStoreFlag`,\r\n",
					"`PCodeID` \t\t\t\tAS `CP_PCodeID`,\r\n",
					"`DefDelPCode` \t\t\tAS `CP_DefDelPCode`,\r\n",
					"`AutoEmailFlag` \t\tAS `CP_AutoEmailFlag`,\r\n",
					"`WType` \t\t\t\tAS `CP_WType`,\r\n",
					"`NDDID` \t\t\t\tAS `CP_NDDID`,\r\n",
					"`CONSPerORD` \t\t\tAS `CP_CONSPerORD`,\r\n",
					"`InCompleteOrderChkFlag` AS `CP_InCompleteOrderChkFlag`,\r\n",
					"`MaxCartons` \t\t\tAS `CP_MaxCartons`,\r\n",
					"`ActiveFlag` \t\t\tAS `CP_ActiveFlag`,\r\n",
					"`Suburb` \t\t\t\tAS `CP_Suburb`,\r\n",
					"`CallProgID` \t\t\tAS `CP_CallProgID`,\r\n",
					"`Address_Status` \t\tAS `CP_Address_Status`,\r\n",
					"`Address_Status_Date` \tAS `CP_Address_Status_Date`,\r\n",
					"`Address_Status_User` \tAS `CP_Address_Status_User`,\r\n",
					"`Address_Terrain_Type` \tAS `CP_Address_Terrain_Type`,\r\n",
					"`Latitude` \t\t\t\tAS `CP_Latitude`,\r\n",
					"`Longitude` \t\t\tAS `CP_Longitude`,\r\n",
					"`CallProgUpdDate` \t\tAS `CP_CallProgUpdDate`\r\n",
					"FROM dboCustomer\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#PCUSTOMER.show()\r\n",
					"PCUSTOMER.createOrReplaceTempView(\"PCUSTOMER\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PCUSTOMER_1 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT CP_ID,\r\n",
					"    CP_Name,\r\n",
					"    CP_SR_ID,\r\n",
					"    OD_PickUpCustID\r\n",
					"FROM PCUSTOMER \r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#PCUSTOMER_1.show()\r\n",
					"PCUSTOMER_1.createOrReplaceTempView(\"PCUSTOMER_1\")\r\n",
					""
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PSROUTE = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT sr.ID AS `CP_SR_ID`,\r\n",
					"       sr.BillCustID AS `CP_SR_BillCustID`,\r\n",
					"       sr.CourierID AS `CP_SR_CourierID`,\r\n",
					"       sr.Description AS `CP_SR_Description`,\r\n",
					"       sr.Code AS `CP_SR_Code`,\r\n",
					"       sr.id2 AS `CP_SR_ID2`,\r\n",
					"       sr.SRouteGroupID AS `CP_SR_SRouteGroupID`,\r\n",
					"       sr.ZoneID AS `CP_SR_ZoneID`,\r\n",
					"       sr.broutemasterID AS `CP_SR_BRouteMasterID`,\r\n",
					"       sr.LocalFlag AS `CP_SR_LocalFlag`,\r\n",
					"       sr.Area AS `CP_SR_Area`,\r\n",
					"       sg.ID AS `CP_SG_ID`,\r\n",
					"       sg.Description AS `CP_SG_Description`,\r\n",
					"       sg.Code AS `CP_SG_Code`\r\n",
					"\r\n",
					"FROM dboSRoute sr\r\n",
					"LEFT JOIN dboSRouteGroup sg \r\n",
					"       ON sg.ID = sr.SRouteGroupID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#PSROUTE.show()\r\n",
					"PSROUTE.createOrReplaceTempView(\"PSROUTE\")"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"PCUSTOMER_2 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT pc1.*,\r\n",
					"       ps.CP_SR_Description,\r\n",
					"       ps.CP_SR_LocalFlag,\r\n",
					"       IF(ps.CP_SR_LocalFlag = 0,'Outlying',\r\n",
					"       IF(ps.CP_SR_LocalFlag = 1,'Local',\r\n",
					"       IF(ps.CP_SR_LocalFlag = 2,'Export','#'))) AS CP_SR_PickUpRouteGroup,\r\n",
					"       ps.CP_SR_SRouteGroupID,\r\n",
					"       ps.CP_SR_ZoneID,\r\n",
					"       ps.CP_SG_Description\r\n",
					"FROM PCUSTOMER_1 pc1\r\n",
					"LEFT JOIN PSROUTE ps \r\n",
					"       ON pc1.CP_SR_ID = ps.CP_SR_ID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#PCUSTOMER_2.show()\r\n",
					"PCUSTOMER_2.createOrReplaceTempView(\"PCUSTOMER_2\")"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"BCUSTOMER = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT `ID` AS `CB_ID`,\r\n",
					"       `ID` AS `OD_BillCustID`,\r\n",
					"       `ActiveFlag` AS `CB_ActiveFlag`,\r\n",
					"       `Address_Status` AS `CB_Address_Status`,\r\n",
					"       `Address_Status_Date` AS `CB_Address_Status_Date`,\r\n",
					"       `Address_Status_User` AS `CB_Address_Status_User`,\r\n",
					"       `Address_Terrain_Type` AS `CB_Address_Terrain_Type`,\r\n",
					"       `Adres1` AS `CB_Adres1`,\r\n",
					"       `Adres2` AS `CB_Adres2`,\r\n",
					"       `ALTTELNO` AS `CB_ALTTELNO`,\r\n",
					"       `Appointment` AS `CB_Appointment`,\r\n",
					"       `AreaDesc` AS `CB_AreaDesc`,\r\n",
					"       `AutoEmailFlag` AS `CB_AutoEmailFlag`,\r\n",
					"       `Bill_RouteID` AS `CB_Bill_RouteID`,\r\n",
					"       `Bill_ServiceTypeID` AS `CB_Bill_ServiceTypeID`,\r\n",
					"       `Bill_ZoneRouteID` AS `CB_Bill_ZoneRouteID`,\r\n",
					"       `brouteid` AS `CB_brouteid`,\r\n",
					"       `BType` AS `CB_BType`,\r\n",
					"       `CallProgID` AS `CB_CallProgID`,\r\n",
					"       `CallProgUpdDate` AS `CB_CallProgUpdDate`,\r\n",
					"       `ccDepot` AS `CB_ccDepot`,\r\n",
					"       `ccRoute` AS `CB_ccRoute`,\r\n",
					"       `ChainStoreFlag` AS `CB_ChainStoreFlag`,\r\n",
					"       `CONSPerORD` AS `CB_CONSPerORD`,\r\n",
					"       `ContactPerson` AS `CB_ContactPerson`,\r\n",
					"       `CountryCode` AS `CB_CountryCode`,\r\n",
					"       `CRef` AS `CB_CRef`,\r\n",
					"       `CREF2` AS `CB_CREF2`,\r\n",
					"       `CRouteID` AS `CB_CRouteID`,\r\n",
					"       `CType` AS `CB_CType`,\r\n",
					"       `CustAccID` AS `CB_CustAccID`,\r\n",
					"       `CustGroupID` AS `CB_CustGroupID`,\r\n",
					"       `CustMainID` AS `CB_CustMainID`,\r\n",
					"       `CustRateid` AS `CB_CustRateid`,\r\n",
					"       `CustRouteGroupID` AS `CB_CustRouteGroupID`,\r\n",
					"       `CustServiceDays` AS `CB_CustServiceDays`,\r\n",
					"       `CustServiceTime` AS `CB_CustServiceTime`,\r\n",
					"       `DC` AS `CB_DC`,\r\n",
					"       `DefDelPCode` AS `CB_DefDelPCode`,\r\n",
					"       `Deliverby1` AS `CB_Deliverby1`,\r\n",
					"       `DeliveryDepotID` AS `CB_DeliveryDepotID`,\r\n",
					"       `DeliveryType` AS `CB_DeliveryType`,\r\n",
					"       `Discount` AS `CB_Discount`,\r\n",
					"       `DualBillCourier` AS `CB_DualBillCourier`,\r\n",
					"       `Email` AS `CB_Email`,\r\n",
					"       `FaxNo` AS `CB_FaxNo`,\r\n",
					"       `FCType` AS `CB_FCType`,\r\n",
					"       `FLevy` AS `CB_FLevy`,\r\n",
					"       `FWApiKey` AS `CB_FWApiKey`,\r\n",
					"       `FWCostCentreID` AS `CB_FWCostCentreID`,\r\n",
					"       `FWMultiBusinessID` AS `CB_FWMultiBusinessID`,\r\n",
					"       `FWUserID` AS `CB_FWUserID`,\r\n",
					"       `InCompleteOrderChkFlag` AS `CB_InCompleteOrderChkFlag`,\r\n",
					"       `InsertDate` AS `CB_InsertDate`,\r\n",
					"       `IsBillTo`     AS `CB_IsBillTo`,\r\n",
					"       `isBooking`     AS `CB_isBooking`,\r\n",
					"       `IsManual`     AS `CB_IsManual`,\r\n",
					"       `LastUpdate` AS `CB_LastUpdate`,\r\n",
					"       `Latitude` AS `CB_Latitude`,\r\n",
					"       `Longitude` AS `CB_Longitude`,\r\n",
					"       `Maincust` AS `CB_Maincust`,\r\n",
					"       `MainCustID` AS `CB_MainCustID`,\r\n",
					"       `MaxCartons` AS `CB_MaxCartons`,\r\n",
					"       `Name` AS `CB_Name`,\r\n",
					"       `NDDID` AS `CB_NDDID`,\r\n",
					"       `oldStoreID` AS `CB_oldStoreID`,\r\n",
					"       `OnHoldBegin` AS `CB_OnHoldBegin`,\r\n",
					"       `OnHoldEnd` AS `CB_OnHoldEnd`,\r\n",
					"       `OnHoldID` AS `CB_OnHoldID`,\r\n",
					"       `PCode` AS `CB_PCode`,\r\n",
					"       `PCodeID` AS `CB_PCodeID`,\r\n",
					"       `ServRouteID` AS `CB_ServRouteID`,\r\n",
					"       `SRouteID` AS `SR_ID`,\r\n",
					"       `SRouteID2` AS `CB_SRouteID2`,\r\n",
					"       `StoreID` AS `CB_StoreID`,\r\n",
					"       `Suburb` AS `CB_Suburb`,\r\n",
					"       `TelNo` AS `CB_TelNo`,\r\n",
					"       `Town` AS `CB_Town`,\r\n",
					"       `VolFact` AS `CB_VolFact`,\r\n",
					"       `WBPerORD` AS `CB_WBPerORD`,\r\n",
					"       `WType` AS `CB_WType`,\r\n",
					"       `SAPCode` AS `CB_SAPCode`,\r\n",
					"       `ProductCategory` AS `CB_ProductCategory`,\r\n",
					"       `CustomerGroup` AS `CB_CustomerGroup`\r\n",
					"FROM(\r\n",
					"       SELECT c.*\r\n",
					"             ,bcr.SAPCode\r\n",
					"             ,bpc.Description as ProductCategory\r\n",
					"             ,bgt.Description as CustomerGroup\r\n",
					"       FROM dboCustomer c\r\n",
					"       LEFT JOIN dboBill_BillCustomersR bcr\r\n",
					"              ON bcr.BillCustID = c.CustMainID\r\n",
					"       LEFT JOIN dboBill_ProductCategory bpc\r\n",
					"              ON bpc.ID = bcr.ProductCategoryID\r\n",
					"       LEFT JOIN dboBill_CustomerGroups bcg\r\n",
					"              ON bcg.ID = bcr.CustGroupID\r\n",
					"       LEFT JOIN dboBill_CustomerGroupTypes bgt\r\n",
					"              ON bgt.ID = bcg.GroupTypeID\r\n",
					"       WHERE IsBillTo <> 0\r\n",
					"    )a \r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#BCUSTOMER.show()\r\n",
					"BCUSTOMER.createOrReplaceTempView(\"BCUSTOMER\")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"BCUSTOMER_2 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT CB_ID,\r\n",
					"    CB_Name,\r\n",
					"    CB_SAPCode,\r\n",
					"    CB_ProductCategory,\r\n",
					"    CB_CustomerGroup,\r\n",
					"    OD_BillCustID\r\n",
					"FROM BCUSTOMER\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#BCUSTOMER_2.show()\r\n",
					"BCUSTOMER_2.createOrReplaceTempView(\"BCUSTOMER_2\")"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CUSTOMER = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT *\r\n",
					"FROM DCUSTOMER_4 d4\r\n",
					"LEFT JOIN PCUSTOMER_2 p2\r\n",
					"       ON d4.CD_ID = p2.CP_ID\r\n",
					"LEFT JOIN BCUSTOMER_2 b2\r\n",
					"       ON d4.CD_CustMainID = b2.CB_ID \r\n",
					"       --d4.CD_ID = b2.OD_BillCustID\r\n",
					"ORDER BY d4.CD_ID \r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#CUSTOMER.show()\r\n",
					"CUSTOMER.createOrReplaceTempView(\"CUSTOMER\")"
				],
				"execution_count": 17
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Final scripting to finialize the structure of DIM_Customer"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CUSTOMER_2 = spark.sql(\"\"\"\r\n",
					"\r\n",
					"SELECT CD_ID AS C_ID,\r\n",
					"       CD_Name AS C_Name,\r\n",
					"       CB_SAPCode AS CB_SAPCode,\r\n",
					"       CB_ProductCategory AS CB_ProductCategory,\r\n",
					"       CB_CustomerGroup AS CB_CustomerGroup,\r\n",
					"       OD_BillCustID AS C_BillCustID,\r\n",
					"       CD_SR_ID AS C_SR_ID,\r\n",
					"       OD_DeliverCustID AS C_DeliverCustID,\r\n",
					"       CD_CustMainID AS C_CustMainID,\r\n",
					"       CP_SR_Description AS SR_Description,\r\n",
					"       CD_SR_LocalFlag AS SR_LocalFlag,\r\n",
					"       CD_SR_DeliverRouteGroup AS SR_DeliverRouteGroup,\r\n",
					"       CP_SR_SRouteGroupID AS SR_SRouteGroupID,\r\n",
					"       CD_SR_ZoneID AS SR_ZoneID,\r\n",
					"       CD_SG_Description AS SG_Description,\r\n",
					"       CD_ZN_Code AS ZN_Code,\r\n",
					"       CD_ZN_Description AS ZN_Description,\r\n",
					"       CD_ZN_ISOCode AS ZN_ISOCode,\r\n",
					"       CD_ZN_LocID AS ZN_LocID,\r\n",
					"       CD_ZN_ZoneMasterID AS ZN_ZoneMasterID,\r\n",
					"       CD_ZN_DepotDescription AS ZN_DepotDescription,\r\n",
					"       id as `customer.customerid`,\r\n",
					"       name as `customer.name`,\r\n",
					"       contact as `customer.contact`,\r\n",
					"       email as `customer.email`,\r\n",
					"       mobileno as `customer.mobileno`,\r\n",
					"       landline as `customer.landline`,\r\n",
					"       ctype as `customer.ctype`,\r\n",
					"       parent as `customer.parent`,\r\n",
					"       lastupdate as `customer.lastupdate`,\r\n",
					"       lmsid as `customer.lmsid`,\r\n",
					"       insdate as `customer.insdate`,\r\n",
					"       srouteid as `customer.srouteid`,\r\n",
					"       verified as `customer.verified`\r\n",
					"FROM CUSTOMER c\r\n",
					"LEFT JOIN publiccustomer p \r\n",
					"       ON c.`customer.lmsid` = p.lmsid\r\n",
					"ORDER BY CD_ID\r\n",
					"\r\n",
					"\"\"\")\r\n",
					"#CUSTOMER_2.show()\r\n",
					"CUSTOMER_2.createOrReplaceTempView(\"CUSTOMER_2\")"
				],
				"execution_count": 18
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Print success message on the Production Script"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Successful run of the script\")"
				],
				"execution_count": null
			}
		]
	}
}