{
	"name": "STLoadChild",
	"properties": {
		"folder": {
			"name": "TRANSFORM/02 STRUCTURED/Ops/Distribution"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "DevSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "853a22b1-b0bc-4cdc-88cb-4614b057a189"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/99b4fa8b-7705-4d41-a2fb-4f8f9ee006c7/resourceGroups/AZ_Resource_DataWarehouse/providers/Microsoft.Synapse/workspaces/citylogistics-synapseanalytics-workspace/bigDataPools/DevSparkPool",
				"name": "DevSparkPool",
				"type": "Spark",
				"endpoint": "https://citylogistics-synapseanalytics-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/DevSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Environment = mssparkutils.env.getWorkspaceName()\r\n",
					"if 'prod' in Environment:\r\n",
					"    StorageAccount = 'citylogisticsstorageprod'\r\n",
					"    StorageAccountRead = 'citylogisticsstorageprod'\r\n",
					"    StorageAccountWrite = 'citylogisticsstorageprod'\r\n",
					"else:\r\n",
					"    StorageAccount = 'citylogisticsstorage'\r\n",
					"    StorageAccountRead = 'citylogisticsstorageprod'\r\n",
					"    StorageAccountWrite = 'citylogisticsstorage'\r\n",
					"\r\n",
					"# ' + StorageAccount + '"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"#Create DataFrame for the sstloadchild LMS Table\r\n",
					"sstloadchild = spark.read.load('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Semi Structured Data/OPS/sstloadchild.parquet', format='parquet')\r\n",
					"sstloadchild.createOrReplaceTempView(\"sstloadchild\")\r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMP VIEW\r\n",
					"stloadchild\r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    lms_loads_id as lms_loadchild_id\r\n",
					"    ,lms_loads_routeid as lms_loadchild_routeid\r\n",
					"    ,lms_loads_driverid as lms_loadchild_driverid\r\n",
					"    ,lms_loads_sealno as lms_loadchild_sealno\r\n",
					"    ,lms_loads_vehicleid as lms_loadchild_vehicleid\r\n",
					"    ,lms_loads_ttypeid as lms_loadchild_ttypeid\r\n",
					"    ,lms_loads_userid as lms_loadchild_userid\r\n",
					"    ,lms_loads_ldate as lms_loadchild_ldate\r\n",
					"    ,lms_loads_courierid as lms_loadchild_courierid\r\n",
					"    ,lms_loads_site as lms_loadchild_site\r\n",
					"    ,lms_loads_fromlocid as lms_loadchild_fromlocid\r\n",
					"    ,lms_loads_tolocid as lms_loadchild_tolocid\r\n",
					"    ,lms_loads_cdate as lms_loadchild_cdate\r\n",
					"    ,lms_loads_trailer1 as lms_loadchild_trailer1\r\n",
					"    ,lms_loads_trailer2 as lms_loadchild_trailer2\r\n",
					"    ,lms_loads_cref as lms_loadchild_cref\r\n",
					"    ,lms_loads_debriefed as lms_loadchild_debriefed\r\n",
					"    ,lms_loads_mrpflag as lms_loadchild_mrpflag\r\n",
					"    ,lms_loads_mrpcflag as lms_loadchild_mrpcflag\r\n",
					"    ,lms_loads_finalflag as lms_loadchild_finalflag\r\n",
					"    ,lms_loads_alidaflag as lms_loadchild_alidaflag\r\n",
					"    ,lms_loads_puibts as lms_loadchild_puibts\r\n",
					"    ,lms_loads_pucols as lms_loadchild_pucols\r\n",
					"    ,lms_loads_planningref as lms_loadchild_planningref\r\n",
					"    ,lms_loads_interfacedate as lms_loadchild_interfacedate\r\n",
					"    ,lms_loads_nosealsret as lms_loadchild_nosealsret\r\n",
					"    ,lms_loads_excludeopsi as lms_loadchild_excludeopsi\r\n",
					"    ,lms_loads_dccref as lms_loadchild_dccref\r\n",
					"    ,lms_loads_srouteid as lms_loadchild_srouteid\r\n",
					"    ,lms_loads_fuellitres as lms_loadchild_fuellitres\r\n",
					"    ,lms_loads_outsourcedcrew as lms_loadchild_outsourcedcrew\r\n",
					"    ,lms_loads_masterloadid as lms_loadchild_masterloadid\r\n",
					"    ,lms_loads_securitygatedespatched as lms_loadchild_securitygatedespatched\r\n",
					"    ,lms_loads_securitygateuserid as lms_loadchild_securitygateuserid\r\n",
					"    ,lms_loads_securitygatearrived as lms_loadchild_securitygatearrived\r\n",
					"    ,lms_loads_securitygatearriveduserid as lms_loadchild_securitygatearriveduserid\r\n",
					"    ,lms_loads_lastupdate as lms_loadchild_lastupdate\r\n",
					"    ,lms_loads_bayno as lms_loadchild_bayno\r\n",
					"    ,lms_loads_costs as lms_loadchild_costs\r\n",
					"    ,lms_loads_estdeparturedatetime as lms_loadchild_estdeparturedatetime\r\n",
					"    ,lms_loads_totalweight as lms_loadchild_totalweight\r\n",
					"    ,lms_loads_ovrignore as lms_loadchild_ovrignore\r\n",
					"    ,lms_loads_childloadid as lms_loadchild_childloadid\r\n",
					"    ,lms_loads_orvcode as lms_loadchild_orvcode\r\n",
					"    ,lms_loads_companyid as lms_loadchild_companyid\r\n",
					"    ,lms_loads_editloaddate as lms_loadchild_editloaddate\r\n",
					"    ,lms_loads_reopeneddate as lms_loadchild_reopeneddate\r\n",
					"    ,lms_loads_reopeneduserid as lms_loadchild_reopeneduserid\r\n",
					"    ,lms_loads_novehicle as lms_loadchild_novehicle\r\n",
					"    ,lms_loads_mobilefeedbackreasonid as lms_loadchild_mobilefeedbackreasonid\r\n",
					"    ,lms_loads_direct as lms_loadchild_direct\r\n",
					"    ,lms_loads_noofpcls as lms_loadchild_noofpcls\r\n",
					"    ,lms_loads_debriefdt as lms_loadchild_debriefdt\r\n",
					"    ,lms_loads_httpcode as lms_loadchild_httpcode\r\n",
					"    ,lms_loads_parentloadid as lms_loadchild_parentloadid\r\n",
					"    ,lms_loads_mrpobversion as lms_loadchild_mrpobversion\r\n",
					"    ,lms_parcelbyload_loadid as lms_loadchild_loadid\r\n",
					"    ,lms_parcelbyload_aggweight as lms_loadchild_aggweight\r\n",
					"    ,lms_parcelbyload_aggchargeweight as lms_loadchild_aggchargeweight\r\n",
					"    ,lms_parcelbyload_aggvolweight as lms_loadchild_aggvolweight\r\n",
					"    ,lms_parcelbyload_aggvolumiserweight as lms_loadchild_aggvolumiserweight\r\n",
					"    ,lms_parcelbyload_noparcels as lms_loadchild_noparcels\r\n",
					"\r\n",
					"FROM sstloadchild"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"stloadchild = spark.sql(\"SELECT * FROM stloadchild\")"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# stloadchild.write.parquet('abfss://synapse@citylogisticsstorage.dfs.core.windows.net/Structured Data/OPS/stloadchild.parquet', mode = \"overwrite\")\r\n",
					"\r\n",
					"print(\"SUCCESS\")"
				],
				"execution_count": 8
			}
		]
	}
}